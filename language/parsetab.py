
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY BEGIN BOOLEAN BREAK BUSINESS CASH_LEDGER CHAR CHARLITERAL CLOSEARRAY CLOSEBLOCK CLOSEPARAM COMMA CONTINUE CREDIT_LEDGER DECIMAL DECIMALLITERAL DECREMENT DIVIDE DO ELSE END EQUALCOMPARISON EQUALS FALSE FUNCTION GT GTE ID IF IMPORT INCREMENT INTEGER INTEGERLITERAL INVOICE LIABILITY_LEDGER LT LTE MINUS MODULO MULTIPLY NEWLINE NOT NOTEQUALS OF OPENARRAY OPENBLOCK OPENPARAM OR PERCENTAGE PLUS PROBLEM PRODUCT RETURN STRING STRINGLITERAL STRUCTURE TRANSACTION TRUE UTILITY VAR WHILEstart : PROBLEM ID newline imports newline programimports : IMPORT import imports\n\t\t\t\t| IMPORT importimport : UTILITY\n\t\t\t\t| PRODUCT\n\t\t\t\t| INVOICE\n\t\t\t\t| BUSINESS\n\t\t\t\t| LIABILITY_LEDGER\n\t\t\t\t| CREDIT_LEDGER\n\t\t\t\t| CASH_LEDGER\n\t\t\t\t| TRANSACTION program : block\n\tnewline : NEWLINE\n\t\n\tstatement : ifstatement \n\t\t\t | whilestatement \n\t\t\t | dowhilestatement\n\t\t\t | continue newline\n\t\t\t | break newline\n\t\t\t | returnstatement\n\t\t\t | simplestatement\n\t\t\t | empty\n\t\t\t | newline\n\t\n\tblock : statement\n\t\t | statement block\n\t\n\tifstatement : if openparam expression closeparam newline begin block end\n\t\t\t   | if openparam expression closeparam newline begin block end else newline begin block end\n\t\n\twhilestatement : while openparam expression closeparam newline begin block end\n\tdowhilestatement : do newline begin block end newline while openparam expression closeparamreturnstatement : empty\n\t\t\t\t\t\t| return expression newline\n\tsimplestatement : decs\n\t\t\t\t\t| expression\n\t\n\tdecs : dec decs\n\t\t| dec\n\t\n\tdec : vardec\n\t\t| arraydec\n\t\t| functiondefn\n\t\t| functiondec\n\t\t| structuredec\n\tvardec : type iddec newline\n\tiddec : id \n\t\t| id comma iddec\n\t\t| id equals literal \n\t\t| id equals literal comma iddec\n\t\n\tarraydec : array type id newline\n\t\t\t| array type id equals openarray literalslist closearray newline\n\t\n\tfunctiondec : function id openparam paramlist closeparam newline\n\t\n\tparamlist : type id\n\t\t\t\t| type id COMMA paramlist\n\t\t\t\t| empty\n\t\n\tfunctiondefn : functiondec begin block returnstatement end\n\tstructuredec : structure id newline begin newline decs end newline\n\tliteral : STRINGLITERAL\n\t\t   | INTEGERLITERAL\n\t\t   | CHARLITERAL\n\t\t   | DECIMALLITERAL\n\t\t   | TRUE\n\t\t   | FALSE\n\t\n\tliteralslist : literal\n\t\t\t\t | literal comma literalslist\n\t\n\texpression : unaryop expression\n\t\t\t  | indexaccess\n\t\t\t  | memberaccess\n\t\t\t  | functioncall\n\t\t\t  | openparam expression closeparam\n\t\t\t  | expression biop expression\n\t\t\t  | primaryexpression\n\t\t\t  | expression newline\n\t\t\t  | expression equals expression\n\t\n\tunaryop : INCREMENT\n\t\t   | DECREMENT\n\t\t   | NOT\n\t\t   | PLUS\n\t\t   | MINUS\n\t\t   | PERCENTAGE\n\t\n\tbiop : MULTIPLY\n\t\t| DIVIDE\n\t\t| MODULO\n\t\t| PLUS\n\t\t| MINUS\n\t\t| AND\n\t\t| OR\n\t\t| LT\n\t\t| GT\n\t\t| LTE\n\t\t| GTE\n\t\t| EQUALCOMPARISON\n\t\t| NOTEQUALS\n\tequals : EQUALSindexaccess : expression openarray expression closearraymemberaccess : expression of idfunctioncall : ID OPENPARAM callarguments CLOSEPARAM\n\tcallarguments : id\n\t\t\t\t | literalslist\n\t\t\t\t | id comma callarguments\n\t\t\t\t | literalslist comma callarguments\n\t\n\tprimaryexpression : literal\n\t\t\t\t\t | idknown\n\t\n\ttype : INTEGER\n\t\t| CHAR\n\t\t| STRING\n\t\t| BOOLEAN\n\t\t| DECIMAL\n\t\t| VAR\n\tidknown : IDid : IDcomma : COMMAof : OFopenarray : OPENARRAYclosearray : CLOSEARRAYopenparam : OPENPARAMcloseparam : CLOSEPARAMbegin : BEGINend : ENDstructure : STRUCTUREfunction : FUNCTIONarray : ARRAYreturn : RETURNdo : DOwhile : WHILEif : IFelse : ELSEbreak : BREAKcontinue : CONTINUEempty : '
    
_lr_action_items = {'DO':([5,8,19,21,22,25,26,32,37,38,39,42,43,44,46,48,54,56,57,61,62,64,68,69,71,75,77,78,79,80,82,89,94,95,96,97,101,102,115,126,127,128,133,134,142,144,145,146,157,163,164,171,172,179,181,185,192,193,195,196,201,202,204,],[-13,18,-35,-67,-36,-53,-63,-57,-15,-97,-37,18,-16,-56,-31,-21,-54,-22,-20,-62,-38,-105,-58,-98,-39,-64,-19,-34,-32,-55,-14,-106,-61,-18,18,-113,-17,-33,-68,-112,-65,-40,18,-30,-66,-69,-91,-45,-92,-90,-110,-114,-51,18,-47,18,-46,-25,-52,-27,-28,18,-26,]),'TRANSACTION':([7,],[10,]),'RETURN':([5,8,19,21,22,25,26,32,37,38,39,42,43,44,46,48,54,56,57,61,62,64,68,69,71,75,77,78,79,80,82,87,89,94,95,96,97,101,102,115,126,127,128,133,134,135,142,144,145,146,157,163,164,171,172,179,181,185,192,193,195,196,201,202,204,],[-13,20,-35,-67,-36,-53,-63,-57,-15,-97,-37,20,-16,-56,-31,-21,-54,-22,-20,-62,-38,-105,-58,-98,-39,-64,-19,-34,-32,-55,-14,-24,-106,-61,-18,20,-113,-17,-33,-68,-112,-65,-40,20,-30,20,-66,-69,-91,-45,-92,-90,-110,-114,-51,20,-47,20,-46,-25,-52,-27,-28,20,-26,]),'BUSINESS':([7,],[11,]),'NOTEQUALS':([5,21,25,26,32,38,44,54,61,64,68,69,75,79,80,86,89,93,94,115,125,126,127,134,141,142,143,144,145,157,163,164,199,],[-13,-67,-53,-63,-57,-97,-56,-54,-62,-105,-58,-98,-64,103,-55,103,-106,103,103,-68,103,-112,-65,-68,103,103,103,103,-91,-92,-90,-110,103,]),'OPENPARAM':([5,8,19,20,21,22,23,25,26,27,32,33,34,36,37,38,39,41,42,43,44,45,46,48,51,52,53,54,56,57,61,62,64,66,68,69,70,71,73,75,76,77,78,79,80,82,85,89,91,94,95,96,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,123,126,127,128,133,134,142,144,145,146,157,163,164,171,172,179,181,185,189,192,193,194,195,196,201,202,204,],[-13,23,-35,-118,-67,-36,-111,-53,-63,-120,-57,-74,23,23,-15,-97,-37,-73,23,-16,-56,-75,-31,-21,23,-70,23,-54,-22,-20,-62,-38,98,-121,-58,-98,-71,-39,23,-64,-72,-19,-34,-32,-55,-14,23,-106,23,-61,-18,23,-113,23,-17,-33,-88,-76,-80,-109,-86,23,-83,-79,23,-84,-78,-77,-68,23,-89,-85,-81,-87,-82,-112,-65,-40,23,-30,-66,-69,-91,-45,-92,-90,-110,-114,-51,23,-47,23,23,-46,-25,23,-52,-27,-28,23,-26,]),'LIABILITY_LEDGER':([7,],[12,]),'STRINGLITERAL':([5,8,19,20,21,22,23,25,26,32,33,36,37,38,39,41,42,43,44,45,46,48,51,52,53,54,56,57,61,62,64,68,69,70,71,75,76,77,78,79,80,82,85,89,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,123,126,127,128,129,130,133,134,142,144,145,146,157,158,159,160,163,164,165,171,172,179,181,185,192,193,194,195,196,201,202,204,],[-13,25,-35,-118,-67,-36,-111,-53,-63,-57,-74,25,-15,-97,-37,-73,25,-16,-56,-75,-31,-21,25,-70,25,-54,-22,-20,-62,-38,-105,-58,-98,-71,-39,-64,-72,-19,-34,-32,-55,-14,25,-106,-61,-18,25,-113,25,25,-17,-33,-88,-76,-80,-109,-86,25,-83,-79,25,-84,-78,-77,-68,25,-89,-85,-81,-87,-82,-112,-65,-40,25,-107,25,-30,-66,-69,-91,-45,-92,25,25,25,-90,-110,25,-114,-51,25,-47,25,-46,-25,25,-52,-27,-28,25,-26,]),'CHAR':([5,8,19,21,22,23,24,25,26,31,32,37,38,39,42,43,44,46,48,54,56,57,61,62,64,68,69,71,75,77,78,79,80,82,89,94,95,96,97,101,102,115,126,127,128,132,133,134,142,144,145,146,157,163,164,171,172,176,179,181,182,185,192,193,195,196,201,202,204,],[-13,67,-35,-67,-36,-111,-117,-53,-63,67,-57,-15,-97,-37,67,-16,-56,-31,-21,-54,-22,-20,-62,-38,-105,-58,-98,-39,-64,-19,67,-32,-55,-14,-106,-61,-18,67,-113,-17,-33,-68,-112,-65,-40,67,67,-30,-66,-69,-91,-45,-92,-90,-110,-114,-51,67,67,-47,67,67,-46,-25,-52,-27,-28,67,-26,]),'WHILE':([5,8,19,21,22,25,26,32,37,38,39,42,43,44,46,48,54,56,57,61,62,64,68,69,71,75,77,78,79,80,82,89,94,95,96,97,101,102,115,126,127,128,133,134,142,144,145,146,157,163,164,171,172,179,181,183,185,192,193,195,196,201,202,204,],[-13,27,-35,-67,-36,-53,-63,-57,-15,-97,-37,27,-16,-56,-31,-21,-54,-22,-20,-62,-38,-105,-58,-98,-39,-64,-19,-34,-32,-55,-14,-106,-61,-18,27,-113,-17,-33,-68,-112,-65,-40,27,-30,-66,-69,-91,-45,-92,-90,-110,-114,-51,27,-47,27,27,-46,-25,-52,-27,-28,27,-26,]),'MULTIPLY':([5,21,25,26,32,38,44,54,61,64,68,69,75,79,80,86,89,93,94,115,125,126,127,134,141,142,143,144,145,157,163,164,199,],[-13,-67,-53,-63,-57,-97,-56,-54,-62,-105,-58,-98,-64,104,-55,104,-106,104,104,-68,104,-112,-65,-68,104,104,104,104,-91,-92,-90,-110,104,]),'MODULO':([5,21,25,26,32,38,44,54,61,64,68,69,75,79,80,86,89,93,94,115,125,126,127,134,141,142,143,144,145,157,163,164,199,],[-13,-67,-53,-63,-57,-97,-56,-54,-62,-105,-58,-98,-64,113,-55,113,-106,113,113,-68,113,-112,-65,-68,113,113,113,113,-91,-92,-90,-110,113,]),'TRUE':([5,8,19,20,21,22,23,25,26,32,33,36,37,38,39,41,42,43,44,45,46,48,51,52,53,54,56,57,61,62,64,68,69,70,71,75,76,77,78,79,80,82,85,89,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,123,126,127,128,129,130,133,134,142,144,145,146,157,158,159,160,163,164,165,171,172,179,181,185,192,193,194,195,196,201,202,204,],[-13,32,-35,-118,-67,-36,-111,-53,-63,-57,-74,32,-15,-97,-37,-73,32,-16,-56,-75,-31,-21,32,-70,32,-54,-22,-20,-62,-38,-105,-58,-98,-71,-39,-64,-72,-19,-34,-32,-55,-14,32,-106,-61,-18,32,-113,32,32,-17,-33,-88,-76,-80,-109,-86,32,-83,-79,32,-84,-78,-77,-68,32,-89,-85,-81,-87,-82,-112,-65,-40,32,-107,32,-30,-66,-69,-91,-45,-92,32,32,32,-90,-110,32,-114,-51,32,-47,32,-46,-25,32,-52,-27,-28,32,-26,]),'INTEGERLITERAL':([5,8,19,20,21,22,23,25,26,32,33,36,37,38,39,41,42,43,44,45,46,48,51,52,53,54,56,57,61,62,64,68,69,70,71,75,76,77,78,79,80,82,85,89,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,123,126,127,128,129,130,133,134,142,144,145,146,157,158,159,160,163,164,165,171,172,179,181,185,192,193,194,195,196,201,202,204,],[-13,54,-35,-118,-67,-36,-111,-53,-63,-57,-74,54,-15,-97,-37,-73,54,-16,-56,-75,-31,-21,54,-70,54,-54,-22,-20,-62,-38,-105,-58,-98,-71,-39,-64,-72,-19,-34,-32,-55,-14,54,-106,-61,-18,54,-113,54,54,-17,-33,-88,-76,-80,-109,-86,54,-83,-79,54,-84,-78,-77,-68,54,-89,-85,-81,-87,-82,-112,-65,-40,54,-107,54,-30,-66,-69,-91,-45,-92,54,54,54,-90,-110,54,-114,-51,54,-47,54,-46,-25,54,-52,-27,-28,54,-26,]),'OPENARRAY':([5,21,25,26,32,38,44,54,61,64,68,69,75,79,80,86,89,93,94,115,117,125,126,127,134,141,142,143,144,145,147,157,163,164,199,],[-13,-67,-53,-63,-57,-97,-56,-54,-62,-105,-58,-98,-64,106,-55,106,-106,106,106,-68,-89,106,-112,-65,-68,106,106,106,106,-91,106,-92,-90,-110,106,]),'STRING':([5,8,19,21,22,23,24,25,26,31,32,37,38,39,42,43,44,46,48,54,56,57,61,62,64,68,69,71,75,77,78,79,80,82,89,94,95,96,97,101,102,115,126,127,128,132,133,134,142,144,145,146,157,163,164,171,172,176,179,181,182,185,192,193,195,196,201,202,204,],[-13,28,-35,-67,-36,-111,-117,-53,-63,28,-57,-15,-97,-37,28,-16,-56,-31,-21,-54,-22,-20,-62,-38,-105,-58,-98,-39,-64,-19,28,-32,-55,-14,-106,-61,-18,28,-113,-17,-33,-68,-112,-65,-40,28,28,-30,-66,-69,-91,-45,-92,-90,-110,-114,-51,28,28,-47,28,28,-46,-25,-52,-27,-28,28,-26,]),'BEGIN':([5,62,92,140,166,177,181,200,],[-13,97,97,97,97,97,-47,97,]),'PERCENTAGE':([5,8,19,20,21,22,23,25,26,32,33,36,37,38,39,41,42,43,44,45,46,48,51,52,53,54,56,57,61,62,64,68,69,70,71,75,76,77,78,79,80,82,85,89,94,95,96,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,123,126,127,128,133,134,142,144,145,146,157,163,164,171,172,179,181,185,192,193,194,195,196,201,202,204,],[-13,45,-35,-118,-67,-36,-111,-53,-63,-57,-74,45,-15,-97,-37,-73,45,-16,-56,-75,-31,-21,45,-70,45,-54,-22,-20,-62,-38,-105,-58,-98,-71,-39,-64,-72,-19,-34,-32,-55,-14,45,-106,-61,-18,45,-113,45,-17,-33,-88,-76,-80,-109,-86,45,-83,-79,45,-84,-78,-77,-68,45,-89,-85,-81,-87,-82,-112,-65,-40,45,-30,-66,-69,-91,-45,-92,-90,-110,-114,-51,45,-47,45,-46,-25,45,-52,-27,-28,45,-26,]),'CASH_LEDGER':([7,],[16,]),'CHARLITERAL':([5,8,19,20,21,22,23,25,26,32,33,36,37,38,39,41,42,43,44,45,46,48,51,52,53,54,56,57,61,62,64,68,69,70,71,75,76,77,78,79,80,82,85,89,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,123,126,127,128,129,130,133,134,142,144,145,146,157,158,159,160,163,164,165,171,172,179,181,185,192,193,194,195,196,201,202,204,],[-13,80,-35,-118,-67,-36,-111,-53,-63,-57,-74,80,-15,-97,-37,-73,80,-16,-56,-75,-31,-21,80,-70,80,-54,-22,-20,-62,-38,-105,-58,-98,-71,-39,-64,-72,-19,-34,-32,-55,-14,80,-106,-61,-18,80,-113,80,80,-17,-33,-88,-76,-80,-109,-86,80,-83,-79,80,-84,-78,-77,-68,80,-89,-85,-81,-87,-82,-112,-65,-40,80,-107,80,-30,-66,-69,-91,-45,-92,80,80,80,-90,-110,80,-114,-51,80,-47,80,-46,-25,80,-52,-27,-28,80,-26,]),'NEWLINE':([3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,21,22,25,26,30,32,37,38,39,42,43,44,46,48,50,54,56,57,58,61,62,64,68,69,71,72,74,75,77,78,79,80,82,83,86,88,89,90,93,94,95,96,97,99,101,102,115,124,125,126,127,128,133,134,141,142,143,144,145,146,148,149,150,157,161,162,163,164,168,170,171,172,179,180,181,185,186,190,192,193,195,196,197,198,199,201,202,204,],[5,-13,5,5,-5,-11,-7,-8,-9,-6,-3,-10,-4,-119,-35,-67,-36,-53,-63,-124,-57,-15,-97,-37,5,-16,-56,-31,-21,5,-54,-22,-20,5,-62,-38,-105,-58,-98,-39,-123,5,-64,-19,-34,5,-55,-14,-2,5,5,-106,-41,5,5,-18,5,-113,5,-17,-33,-68,5,5,-112,-65,-40,5,-30,5,5,5,5,-91,-45,5,-43,-42,-92,5,5,-90,-110,5,5,-114,-51,5,-44,-47,5,5,5,-46,-25,-52,-27,5,-122,5,-28,5,-26,]),'MINUS':([5,8,19,20,21,22,23,25,26,32,33,36,37,38,39,41,42,43,44,45,46,48,51,52,53,54,56,57,61,62,64,68,69,70,71,75,76,77,78,79,80,82,85,86,89,93,94,95,96,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,123,125,126,127,128,133,134,141,142,143,144,145,146,157,163,164,171,172,179,181,185,192,193,194,195,196,199,201,202,204,],[-13,33,-35,-118,-67,-36,-111,-53,-63,-57,-74,33,-15,-97,-37,-73,33,-16,-56,-75,-31,-21,33,-70,33,-54,-22,-20,-62,-38,-105,-58,-98,-71,-39,-64,-72,-19,-34,105,-55,-14,33,105,-106,105,105,-18,33,-113,33,-17,-33,-88,-76,-80,-109,-86,33,-83,-79,33,-84,-78,-77,-68,33,-89,-85,-81,-87,-82,105,-112,-65,-40,33,-30,105,105,105,105,-91,-45,-92,-90,-110,-114,-51,33,-47,33,-46,-25,33,-52,-27,105,-28,33,-26,]),'LT':([5,21,25,26,32,38,44,54,61,64,68,69,75,79,80,86,89,93,94,115,125,126,127,134,141,142,143,144,145,157,163,164,199,],[-13,-67,-53,-63,-57,-97,-56,-54,-62,-105,-58,-98,-64,109,-55,109,-106,109,109,-68,109,-112,-65,-68,109,109,109,109,-91,-92,-90,-110,109,]),'CONTINUE':([5,8,19,21,22,25,26,32,37,38,39,42,43,44,46,48,54,56,57,61,62,64,68,69,71,75,77,78,79,80,82,89,94,95,96,97,101,102,115,126,127,128,133,134,142,144,145,146,157,163,164,171,172,179,181,185,192,193,195,196,201,202,204,],[-13,30,-35,-67,-36,-53,-63,-57,-15,-97,-37,30,-16,-56,-31,-21,-54,-22,-20,-62,-38,-105,-58,-98,-39,-64,-19,-34,-32,-55,-14,-106,-61,-18,30,-113,-17,-33,-68,-112,-65,-40,30,-30,-66,-69,-91,-45,-92,-90,-110,-114,-51,30,-47,30,-46,-25,-52,-27,-28,30,-26,]),'PLUS':([5,8,19,20,21,22,23,25,26,32,33,36,37,38,39,41,42,43,44,45,46,48,51,52,53,54,56,57,61,62,64,68,69,70,71,75,76,77,78,79,80,82,85,86,89,93,94,95,96,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,123,125,126,127,128,133,134,141,142,143,144,145,146,157,163,164,171,172,179,181,185,192,193,194,195,196,199,201,202,204,],[-13,41,-35,-118,-67,-36,-111,-53,-63,-57,-74,41,-15,-97,-37,-73,41,-16,-56,-75,-31,-21,41,-70,41,-54,-22,-20,-62,-38,-105,-58,-98,-71,-39,-64,-72,-19,-34,110,-55,-14,41,110,-106,110,110,-18,41,-113,41,-17,-33,-88,-76,-80,-109,-86,41,-83,-79,41,-84,-78,-77,-68,41,-89,-85,-81,-87,-82,110,-112,-65,-40,41,-30,110,110,110,110,-91,-45,-92,-90,-110,-114,-51,41,-47,41,-46,-25,41,-52,-27,110,-28,41,-26,]),'INCREMENT':([5,8,19,20,21,22,23,25,26,32,33,36,37,38,39,41,42,43,44,45,46,48,51,52,53,54,56,57,61,62,64,68,69,70,71,75,76,77,78,79,80,82,85,89,94,95,96,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,123,126,127,128,133,134,142,144,145,146,157,163,164,171,172,179,181,185,192,193,194,195,196,201,202,204,],[-13,52,-35,-118,-67,-36,-111,-53,-63,-57,-74,52,-15,-97,-37,-73,52,-16,-56,-75,-31,-21,52,-70,52,-54,-22,-20,-62,-38,-105,-58,-98,-71,-39,-64,-72,-19,-34,-32,-55,-14,52,-106,-61,-18,52,-113,52,-17,-33,-88,-76,-80,-109,-86,52,-83,-79,52,-84,-78,-77,-68,52,-89,-85,-81,-87,-82,-112,-65,-40,52,-30,-66,-69,-91,-45,-92,-90,-110,-114,-51,52,-47,52,-46,-25,52,-52,-27,-28,52,-26,]),'IMPORT':([4,5,9,10,11,12,13,14,15,16,17,],[7,-13,-5,-11,-7,-8,-9,-6,7,-10,-4,]),'ARRAY':([5,8,19,21,22,25,26,32,37,38,39,42,43,44,46,48,54,56,57,61,62,64,68,69,71,75,77,78,79,80,82,89,94,95,96,97,101,102,115,126,127,128,133,134,142,144,145,146,157,163,164,171,172,176,179,181,185,192,193,195,196,201,202,204,],[-13,24,-35,-67,-36,-53,-63,-57,-15,-97,-37,24,-16,-56,-31,-21,-54,-22,-20,-62,-38,-105,-58,-98,-39,-64,-19,24,-32,-55,-14,-106,-61,-18,24,-113,-17,-33,-68,-112,-65,-40,24,-30,-66,-69,-91,-45,-92,-90,-110,-114,-51,24,24,-47,24,-46,-25,-52,-27,-28,24,-26,]),'CLOSEPARAM':([5,21,23,25,26,32,38,44,54,61,64,68,69,75,80,86,89,94,115,125,126,127,132,136,137,138,139,141,142,144,145,151,153,157,163,164,169,173,174,175,182,188,199,],[-13,-67,-111,-53,-63,-57,-97,-56,-54,-62,-105,-58,-98,-64,-55,126,-106,-61,-68,126,-112,-65,-125,157,-59,-94,-93,126,-66,-69,-91,126,-50,-92,-90,-110,-48,-60,-96,-95,-125,-49,126,]),'$end':([1,5,8,19,21,22,25,26,32,37,38,39,40,42,43,44,46,48,54,56,57,61,62,64,68,69,71,75,77,78,79,80,81,82,87,89,94,95,101,102,115,126,127,128,134,142,144,145,146,157,163,164,171,172,181,192,193,195,196,201,204,],[0,-13,-125,-35,-67,-36,-53,-63,-57,-15,-97,-37,-1,-23,-16,-56,-31,-21,-54,-22,-20,-62,-38,-105,-58,-98,-39,-64,-19,-34,-32,-55,-12,-14,-24,-106,-61,-18,-17,-33,-68,-112,-65,-40,-30,-66,-69,-91,-45,-92,-90,-110,-114,-51,-47,-46,-25,-52,-27,-28,-26,]),'FUNCTION':([5,8,19,21,22,25,26,32,37,38,39,42,43,44,46,48,54,56,57,61,62,64,68,69,71,75,77,78,79,80,82,89,94,95,96,97,101,102,115,126,127,128,133,134,142,144,145,146,157,163,164,171,172,176,179,181,185,192,193,195,196,201,202,204,],[-13,63,-35,-67,-36,-53,-63,-57,-15,-97,-37,63,-16,-56,-31,-21,-54,-22,-20,-62,-38,-105,-58,-98,-39,-64,-19,63,-32,-55,-14,-106,-61,-18,63,-113,-17,-33,-68,-112,-65,-40,63,-30,-66,-69,-91,-45,-92,-90,-110,-114,-51,63,63,-47,63,-46,-25,-52,-27,-28,63,-26,]),'INVOICE':([7,],[14,]),'GT':([5,21,25,26,32,38,44,54,61,64,68,69,75,79,80,86,89,93,94,115,125,126,127,134,141,142,143,144,145,157,163,164,199,],[-13,-67,-53,-63,-57,-97,-56,-54,-62,-105,-58,-98,-64,112,-55,112,-106,112,112,-68,112,-112,-65,-68,112,112,112,112,-91,-92,-90,-110,112,]),'END':([5,19,21,22,25,26,32,37,38,39,42,43,44,46,48,54,56,57,61,62,64,68,69,71,75,77,78,79,80,82,87,89,94,95,96,97,101,102,115,126,127,128,133,134,135,142,144,145,146,154,155,156,157,163,164,171,172,179,181,184,185,187,191,192,193,195,196,201,202,203,204,],[-13,-35,-67,-36,-53,-63,-57,-15,-97,-37,-23,-16,-56,-31,-21,-54,-22,-20,-62,-38,-105,-58,-98,-39,-64,-19,-34,-32,-55,-14,-24,-106,-61,-18,-125,-113,-17,-33,-68,-112,-65,-40,-125,-30,-125,-66,-69,-91,-45,171,171,-29,-92,-90,-110,-114,-51,-125,-47,171,-125,171,171,-46,-25,-52,-27,-28,-125,171,-26,]),'DIVIDE':([5,21,25,26,32,38,44,54,61,64,68,69,75,79,80,86,89,93,94,115,125,126,127,134,141,142,143,144,145,157,163,164,199,],[-13,-67,-53,-63,-57,-97,-56,-54,-62,-105,-58,-98,-64,114,-55,114,-106,114,114,-68,114,-112,-65,-68,114,114,114,114,-91,-92,-90,-110,114,]),'CLOSEARRAY':([5,21,25,26,32,38,44,54,61,64,68,69,75,80,89,94,115,126,127,137,142,143,144,145,157,163,164,173,178,],[-13,-67,-53,-63,-57,-97,-56,-54,-62,-105,-58,-98,-64,-55,-106,-61,-68,-112,-65,-59,-66,164,-69,-91,-92,-90,-110,-60,164,]),'DECIMAL':([5,8,19,21,22,23,24,25,26,31,32,37,38,39,42,43,44,46,48,54,56,57,61,62,64,68,69,71,75,77,78,79,80,82,89,94,95,96,97,101,102,115,126,127,128,132,133,134,142,144,145,146,157,163,164,171,172,176,179,181,182,185,192,193,195,196,201,202,204,],[-13,55,-35,-67,-36,-111,-117,-53,-63,55,-57,-15,-97,-37,55,-16,-56,-31,-21,-54,-22,-20,-62,-38,-105,-58,-98,-39,-64,-19,55,-32,-55,-14,-106,-61,-18,55,-113,-17,-33,-68,-112,-65,-40,55,55,-30,-66,-69,-91,-45,-92,-90,-110,-114,-51,55,55,-47,55,55,-46,-25,-52,-27,-28,55,-26,]),'EQUALS':([5,21,25,26,32,38,44,54,61,64,68,69,75,79,80,86,89,90,93,94,115,124,125,126,127,134,141,142,143,144,145,157,163,164,199,],[-13,-67,-53,-63,-57,-97,-56,-54,-62,-105,-58,-98,-64,117,-55,117,-106,117,117,117,-68,117,117,-112,-65,-68,117,117,117,117,-91,-92,-90,-110,117,]),'ELSE':([171,193,],[-114,198,]),'LTE':([5,21,25,26,32,38,44,54,61,64,68,69,75,79,80,86,89,93,94,115,125,126,127,134,141,142,143,144,145,157,163,164,199,],[-13,-67,-53,-63,-57,-97,-56,-54,-62,-105,-58,-98,-64,118,-55,118,-106,118,118,-68,118,-112,-65,-68,118,118,118,118,-91,-92,-90,-110,118,]),'INTEGER':([5,8,19,21,22,23,24,25,26,31,32,37,38,39,42,43,44,46,48,54,56,57,61,62,64,68,69,71,75,77,78,79,80,82,89,94,95,96,97,101,102,115,126,127,128,132,133,134,142,144,145,146,157,163,164,171,172,176,179,181,182,185,192,193,195,196,201,202,204,],[-13,59,-35,-67,-36,-111,-117,-53,-63,59,-57,-15,-97,-37,59,-16,-56,-31,-21,-54,-22,-20,-62,-38,-105,-58,-98,-39,-64,-19,59,-32,-55,-14,-106,-61,-18,59,-113,-17,-33,-68,-112,-65,-40,59,59,-30,-66,-69,-91,-45,-92,-90,-110,-114,-51,59,59,-47,59,59,-46,-25,-52,-27,-28,59,-26,]),'VAR':([5,8,19,21,22,23,24,25,26,31,32,37,38,39,42,43,44,46,48,54,56,57,61,62,64,68,69,71,75,77,78,79,80,82,89,94,95,96,97,101,102,115,126,127,128,132,133,134,142,144,145,146,157,163,164,171,172,176,179,181,182,185,192,193,195,196,201,202,204,],[-13,60,-35,-67,-36,-111,-117,-53,-63,60,-57,-15,-97,-37,60,-16,-56,-31,-21,-54,-22,-20,-62,-38,-105,-58,-98,-39,-64,-19,60,-32,-55,-14,-106,-61,-18,60,-113,-17,-33,-68,-112,-65,-40,60,60,-30,-66,-69,-91,-45,-92,-90,-110,-114,-51,60,60,-47,60,60,-46,-25,-52,-27,-28,60,-26,]),'PROBLEM':([0,],[2,]),'ID':([2,5,8,19,20,21,22,23,25,26,28,29,32,33,35,36,37,38,39,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,59,60,61,62,63,64,65,67,68,69,70,71,75,76,77,78,79,80,82,84,85,89,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,127,128,130,131,133,134,142,144,145,146,152,157,159,160,163,164,167,171,172,179,181,185,192,193,194,195,196,201,202,204,],[3,-13,64,-35,-118,-67,-36,-111,-53,-63,-101,-115,-57,-74,-102,64,-15,-97,-37,-73,64,-16,-56,-75,-31,89,-21,89,64,-70,64,-54,-103,-22,-20,-99,-104,-62,-38,-116,-105,89,-100,-58,-98,-71,-39,-64,-72,-19,-34,-32,-55,-14,89,64,-106,-61,-18,64,-113,89,64,-17,-33,-88,-76,-80,-109,-86,64,-83,-79,64,-84,-78,-77,-68,64,-89,-85,-81,89,-87,-108,-82,-112,-65,-40,-107,89,64,-30,-66,-69,-91,-45,89,-92,89,89,-90,-110,89,-114,-51,64,-47,64,-46,-25,64,-52,-27,-28,64,-26,]),'IF':([5,8,19,21,22,25,26,32,37,38,39,42,43,44,46,48,54,56,57,61,62,64,68,69,71,75,77,78,79,80,82,89,94,95,96,97,101,102,115,126,127,128,133,134,142,144,145,146,157,163,164,171,172,179,181,185,192,193,195,196,201,202,204,],[-13,66,-35,-67,-36,-53,-63,-57,-15,-97,-37,66,-16,-56,-31,-21,-54,-22,-20,-62,-38,-105,-58,-98,-39,-64,-19,-34,-32,-55,-14,-106,-61,-18,66,-113,-17,-33,-68,-112,-65,-40,66,-30,-66,-69,-91,-45,-92,-90,-110,-114,-51,66,-47,66,-46,-25,-52,-27,-28,66,-26,]),'AND':([5,21,25,26,32,38,44,54,61,64,68,69,75,79,80,86,89,93,94,115,125,126,127,134,141,142,143,144,145,157,163,164,199,],[-13,-67,-53,-63,-57,-97,-56,-54,-62,-105,-58,-98,-64,119,-55,119,-106,119,119,-68,119,-112,-65,-68,119,119,119,119,-91,-92,-90,-110,119,]),'CREDIT_LEDGER':([7,],[13,]),'PRODUCT':([7,],[9,]),'FALSE':([5,8,19,20,21,22,23,25,26,32,33,36,37,38,39,41,42,43,44,45,46,48,51,52,53,54,56,57,61,62,64,68,69,70,71,75,76,77,78,79,80,82,85,89,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,123,126,127,128,129,130,133,134,142,144,145,146,157,158,159,160,163,164,165,171,172,179,181,185,192,193,194,195,196,201,202,204,],[-13,68,-35,-118,-67,-36,-111,-53,-63,-57,-74,68,-15,-97,-37,-73,68,-16,-56,-75,-31,-21,68,-70,68,-54,-22,-20,-62,-38,-105,-58,-98,-71,-39,-64,-72,-19,-34,-32,-55,-14,68,-106,-61,-18,68,-113,68,68,-17,-33,-88,-76,-80,-109,-86,68,-83,-79,68,-84,-78,-77,-68,68,-89,-85,-81,-87,-82,-112,-65,-40,68,-107,68,-30,-66,-69,-91,-45,-92,68,68,68,-90,-110,68,-114,-51,68,-47,68,-46,-25,68,-52,-27,-28,68,-26,]),'OF':([5,21,25,26,32,38,44,54,61,64,68,69,75,79,80,86,89,93,94,115,125,126,127,134,141,142,143,144,145,157,163,164,199,],[-13,-67,-53,-63,-57,-97,-56,-54,-62,-105,-58,-98,-64,122,-55,122,-106,122,122,-68,122,-112,-65,-68,122,122,122,122,-91,-92,-90,-110,122,]),'GTE':([5,21,25,26,32,38,44,54,61,64,68,69,75,79,80,86,89,93,94,115,125,126,127,134,141,142,143,144,145,157,163,164,199,],[-13,-67,-53,-63,-57,-97,-56,-54,-62,-105,-58,-98,-64,107,-55,107,-106,107,107,-68,107,-112,-65,-68,107,107,107,107,-91,-92,-90,-110,107,]),'EQUALCOMPARISON':([5,21,25,26,32,38,44,54,61,64,68,69,75,79,80,86,89,93,94,115,125,126,127,134,141,142,143,144,145,157,163,164,199,],[-13,-67,-53,-63,-57,-97,-56,-54,-62,-105,-58,-98,-64,121,-55,121,-106,121,121,-68,121,-112,-65,-68,121,121,121,121,-91,-92,-90,-110,121,]),'BREAK':([5,8,19,21,22,25,26,32,37,38,39,42,43,44,46,48,54,56,57,61,62,64,68,69,71,75,77,78,79,80,82,89,94,95,96,97,101,102,115,126,127,128,133,134,142,144,145,146,157,163,164,171,172,179,181,185,192,193,195,196,201,202,204,],[-13,72,-35,-67,-36,-53,-63,-57,-15,-97,-37,72,-16,-56,-31,-21,-54,-22,-20,-62,-38,-105,-58,-98,-39,-64,-19,-34,-32,-55,-14,-106,-61,-18,72,-113,-17,-33,-68,-112,-65,-40,72,-30,-66,-69,-91,-45,-92,-90,-110,-114,-51,72,-47,72,-46,-25,-52,-27,-28,72,-26,]),'BOOLEAN':([5,8,19,21,22,23,24,25,26,31,32,37,38,39,42,43,44,46,48,54,56,57,61,62,64,68,69,71,75,77,78,79,80,82,89,94,95,96,97,101,102,115,126,127,128,132,133,134,142,144,145,146,157,163,164,171,172,176,179,181,182,185,192,193,195,196,201,202,204,],[-13,35,-35,-67,-36,-111,-117,-53,-63,35,-57,-15,-97,-37,35,-16,-56,-31,-21,-54,-22,-20,-62,-38,-105,-58,-98,-39,-64,-19,35,-32,-55,-14,-106,-61,-18,35,-113,-17,-33,-68,-112,-65,-40,35,35,-30,-66,-69,-91,-45,-92,-90,-110,-114,-51,35,35,-47,35,35,-46,-25,-52,-27,-28,35,-26,]),'DECIMALLITERAL':([5,8,19,20,21,22,23,25,26,32,33,36,37,38,39,41,42,43,44,45,46,48,51,52,53,54,56,57,61,62,64,68,69,70,71,75,76,77,78,79,80,82,85,89,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,123,126,127,128,129,130,133,134,142,144,145,146,157,158,159,160,163,164,165,171,172,179,181,185,192,193,194,195,196,201,202,204,],[-13,44,-35,-118,-67,-36,-111,-53,-63,-57,-74,44,-15,-97,-37,-73,44,-16,-56,-75,-31,-21,44,-70,44,-54,-22,-20,-62,-38,-105,-58,-98,-71,-39,-64,-72,-19,-34,-32,-55,-14,44,-106,-61,-18,44,-113,44,44,-17,-33,-88,-76,-80,-109,-86,44,-83,-79,44,-84,-78,-77,-68,44,-89,-85,-81,-87,-82,-112,-65,-40,44,-107,44,-30,-66,-69,-91,-45,-92,44,44,44,-90,-110,44,-114,-51,44,-47,44,-46,-25,44,-52,-27,-28,44,-26,]),'NOT':([5,8,19,20,21,22,23,25,26,32,33,36,37,38,39,41,42,43,44,45,46,48,51,52,53,54,56,57,61,62,64,68,69,70,71,75,76,77,78,79,80,82,85,89,94,95,96,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,123,126,127,128,133,134,142,144,145,146,157,163,164,171,172,179,181,185,192,193,194,195,196,201,202,204,],[-13,76,-35,-118,-67,-36,-111,-53,-63,-57,-74,76,-15,-97,-37,-73,76,-16,-56,-75,-31,-21,76,-70,76,-54,-22,-20,-62,-38,-105,-58,-98,-71,-39,-64,-72,-19,-34,-32,-55,-14,76,-106,-61,-18,76,-113,76,-17,-33,-88,-76,-80,-109,-86,76,-83,-79,76,-84,-78,-77,-68,76,-89,-85,-81,-87,-82,-112,-65,-40,76,-30,-66,-69,-91,-45,-92,-90,-110,-114,-51,76,-47,76,-46,-25,76,-52,-27,-28,76,-26,]),'DECREMENT':([5,8,19,20,21,22,23,25,26,32,33,36,37,38,39,41,42,43,44,45,46,48,51,52,53,54,56,57,61,62,64,68,69,70,71,75,76,77,78,79,80,82,85,89,94,95,96,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,123,126,127,128,133,134,142,144,145,146,157,163,164,171,172,179,181,185,192,193,194,195,196,201,202,204,],[-13,70,-35,-118,-67,-36,-111,-53,-63,-57,-74,70,-15,-97,-37,-73,70,-16,-56,-75,-31,-21,70,-70,70,-54,-22,-20,-62,-38,-105,-58,-98,-71,-39,-64,-72,-19,-34,-32,-55,-14,70,-106,-61,-18,70,-113,70,-17,-33,-88,-76,-80,-109,-86,70,-83,-79,70,-84,-78,-77,-68,70,-89,-85,-81,-87,-82,-112,-65,-40,70,-30,-66,-69,-91,-45,-92,-90,-110,-114,-51,70,-47,70,-46,-25,70,-52,-27,-28,70,-26,]),'COMMA':([25,32,44,54,68,80,89,90,137,138,139,149,169,173,],[-53,-57,-56,-54,-58,-55,-106,130,130,130,130,130,182,-60,]),'OR':([5,21,25,26,32,38,44,54,61,64,68,69,75,79,80,86,89,93,94,115,125,126,127,134,141,142,143,144,145,157,163,164,199,],[-13,-67,-53,-63,-57,-97,-56,-54,-62,-105,-58,-98,-64,123,-55,123,-106,123,123,-68,123,-112,-65,-68,123,123,123,123,-91,-92,-90,-110,123,]),'STRUCTURE':([5,8,19,21,22,25,26,32,37,38,39,42,43,44,46,48,54,56,57,61,62,64,68,69,71,75,77,78,79,80,82,89,94,95,96,97,101,102,115,126,127,128,133,134,142,144,145,146,157,163,164,171,172,176,179,181,185,192,193,195,196,201,202,204,],[-13,29,-35,-67,-36,-53,-63,-57,-15,-97,-37,29,-16,-56,-31,-21,-54,-22,-20,-62,-38,-105,-58,-98,-39,-64,-19,29,-32,-55,-14,-106,-61,-18,29,-113,-17,-33,-68,-112,-65,-40,29,-30,-66,-69,-91,-45,-92,-90,-110,-114,-51,29,29,-47,29,-46,-25,-52,-27,-28,29,-26,]),'UTILITY':([7,],[17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'arraydec':([8,42,78,96,133,176,179,185,202,],[22,22,22,22,22,22,22,22,22,]),'primaryexpression':([8,36,42,51,53,85,96,100,108,111,116,133,179,185,194,202,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'callarguments':([98,159,160,],[136,174,175,]),'imports':([4,15,],[6,83,]),'iddec':([47,131,167,],[88,150,180,]),'memberaccess':([8,36,42,51,53,85,96,100,108,111,116,133,179,185,194,202,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'comma':([90,137,138,139,149,],[131,158,159,160,167,]),'array':([8,42,78,96,133,176,179,185,202,],[31,31,31,31,31,31,31,31,31,]),'id':([47,49,65,84,98,120,131,152,159,160,167,],[90,91,99,124,139,145,90,169,139,139,90,]),'if':([8,42,96,133,179,185,202,],[34,34,34,34,34,34,34,]),'end':([154,155,184,187,191,203,],[170,172,190,193,196,204,]),'openparam':([8,34,36,42,51,53,73,85,91,96,100,108,111,116,133,179,185,189,194,202,],[36,85,36,36,36,36,100,36,132,36,36,36,36,36,36,36,36,194,36,36,]),'vardec':([8,42,78,96,133,176,179,185,202,],[19,19,19,19,19,19,19,19,19,]),'whilestatement':([8,42,96,133,179,185,202,],[37,37,37,37,37,37,37,]),'biop':([79,86,93,94,125,141,142,143,144,199,],[108,108,108,108,108,108,108,108,108,108,]),'start':([0,],[1,]),'literal':([8,36,42,51,53,85,96,98,100,108,111,116,129,133,158,159,160,165,179,185,194,202,],[38,38,38,38,38,38,38,137,38,38,38,38,149,38,137,137,137,137,38,38,38,38,]),'program':([8,],[40,]),'statement':([8,42,96,133,179,185,202,],[42,42,42,42,42,42,42,]),'dowhilestatement':([8,42,96,133,179,185,202,],[43,43,43,43,43,43,43,]),'literalslist':([98,158,159,160,165,],[138,173,138,138,178,]),'import':([7,],[15,]),'decs':([8,42,78,96,133,176,179,185,202,],[46,46,102,46,46,184,46,46,46,]),'type':([8,31,42,78,96,132,133,176,179,182,185,202,],[47,84,47,47,47,152,47,47,47,152,47,47,]),'structuredec':([8,42,78,96,133,176,179,185,202,],[71,71,71,71,71,71,71,71,71,]),'empty':([8,42,96,132,133,135,179,182,185,202,],[48,48,48,153,48,156,48,153,48,48,]),'function':([8,42,78,96,133,176,179,185,202,],[49,49,49,49,49,49,49,49,49,]),'do':([8,42,96,133,179,185,202,],[50,50,50,50,50,50,50,]),'begin':([62,92,140,166,177,200,],[96,133,161,179,185,202,]),'return':([8,42,96,133,135,179,185,202,],[51,51,51,51,51,51,51,51,]),'unaryop':([8,36,42,51,53,85,96,100,108,111,116,133,179,185,194,202,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'closearray':([143,178,],[163,186,]),'newline':([3,6,8,42,50,58,74,79,86,88,93,94,96,99,124,125,133,141,142,143,144,148,161,162,168,170,179,185,186,190,197,199,202,],[4,8,56,56,92,95,101,115,115,128,134,115,56,140,146,115,56,115,115,115,115,166,176,177,181,183,56,56,192,195,200,115,56,]),'equals':([79,86,90,93,94,124,125,141,142,143,144,199,],[116,116,129,116,116,147,116,116,116,116,116,116,]),'simplestatement':([8,42,96,133,179,185,202,],[57,57,57,57,57,57,57,]),'else':([193,],[197,]),'break':([8,42,96,133,179,185,202,],[58,58,58,58,58,58,58,]),'paramlist':([132,182,],[151,188,]),'indexaccess':([8,36,42,51,53,85,96,100,108,111,116,133,179,185,194,202,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'functiondec':([8,42,78,96,133,176,179,185,202,],[62,62,62,62,62,62,62,62,62,]),'functiondefn':([8,42,78,96,133,176,179,185,202,],[39,39,39,39,39,39,39,39,39,]),'structure':([8,42,78,96,133,176,179,185,202,],[65,65,65,65,65,65,65,65,65,]),'of':([79,86,93,94,125,141,142,143,144,199,],[120,120,120,120,120,120,120,120,120,120,]),'idknown':([8,36,42,51,53,85,96,100,108,111,116,133,179,185,194,202,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'closeparam':([86,125,141,151,199,],[127,148,162,168,201,]),'while':([8,42,96,133,179,183,185,202,],[73,73,73,73,73,189,73,73,]),'continue':([8,42,96,133,179,185,202,],[74,74,74,74,74,74,74,]),'functioncall':([8,36,42,51,53,85,96,100,108,111,116,133,179,185,194,202,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'openarray':([79,86,93,94,125,141,142,143,144,147,199,],[111,111,111,111,111,111,111,111,111,165,111,]),'returnstatement':([8,42,96,133,135,179,185,202,],[77,77,77,77,155,77,77,77,]),'dec':([8,42,78,96,133,176,179,185,202,],[78,78,78,78,78,78,78,78,78,]),'expression':([8,36,42,51,53,85,96,100,108,111,116,133,179,185,194,202,],[79,86,79,93,94,125,79,141,142,143,144,79,79,79,199,79,]),'block':([8,42,96,133,179,185,202,],[81,87,135,154,187,191,203,]),'ifstatement':([8,42,96,133,179,185,202,],[82,82,82,82,82,82,82,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> PROBLEM ID newline imports newline program','start',6,'p_start','parser.py',13),
  ('imports -> IMPORT import imports','imports',3,'p_imports','parser.py',18),
  ('imports -> IMPORT import','imports',2,'p_imports','parser.py',19),
  ('import -> UTILITY','import',1,'p_import','parser.py',27),
  ('import -> PRODUCT','import',1,'p_import','parser.py',28),
  ('import -> INVOICE','import',1,'p_import','parser.py',29),
  ('import -> BUSINESS','import',1,'p_import','parser.py',30),
  ('import -> LIABILITY_LEDGER','import',1,'p_import','parser.py',31),
  ('import -> CREDIT_LEDGER','import',1,'p_import','parser.py',32),
  ('import -> CASH_LEDGER','import',1,'p_import','parser.py',33),
  ('import -> TRANSACTION','import',1,'p_import','parser.py',34),
  ('program -> block','program',1,'p_program','parser.py',40),
  ('newline -> NEWLINE','newline',1,'p_newline','parser.py',47),
  ('statement -> ifstatement','statement',1,'p_statement','parser.py',55),
  ('statement -> whilestatement','statement',1,'p_statement','parser.py',56),
  ('statement -> dowhilestatement','statement',1,'p_statement','parser.py',57),
  ('statement -> continue newline','statement',2,'p_statement','parser.py',58),
  ('statement -> break newline','statement',2,'p_statement','parser.py',59),
  ('statement -> returnstatement','statement',1,'p_statement','parser.py',60),
  ('statement -> simplestatement','statement',1,'p_statement','parser.py',61),
  ('statement -> empty','statement',1,'p_statement','parser.py',62),
  ('statement -> newline','statement',1,'p_statement','parser.py',63),
  ('block -> statement','block',1,'p_block','parser.py',74),
  ('block -> statement block','block',2,'p_block','parser.py',75),
  ('ifstatement -> if openparam expression closeparam newline begin block end','ifstatement',8,'p_ifstatement','parser.py',84),
  ('ifstatement -> if openparam expression closeparam newline begin block end else newline begin block end','ifstatement',13,'p_ifstatement','parser.py',85),
  ('whilestatement -> while openparam expression closeparam newline begin block end','whilestatement',8,'p_whilestatement','parser.py',95),
  ('dowhilestatement -> do newline begin block end newline while openparam expression closeparam','dowhilestatement',10,'p_dowhilestatement','parser.py',102),
  ('returnstatement -> empty','returnstatement',1,'p_returnstatement','parser.py',108),
  ('returnstatement -> return expression newline','returnstatement',3,'p_returnstatement','parser.py',109),
  ('simplestatement -> decs','simplestatement',1,'p_simplestatement','parser.py',121),
  ('simplestatement -> expression','simplestatement',1,'p_simplestatement','parser.py',122),
  ('decs -> dec decs','decs',2,'p_decs','parser.py',130),
  ('decs -> dec','decs',1,'p_decs','parser.py',131),
  ('dec -> vardec','dec',1,'p_dec','parser.py',141),
  ('dec -> arraydec','dec',1,'p_dec','parser.py',142),
  ('dec -> functiondefn','dec',1,'p_dec','parser.py',143),
  ('dec -> functiondec','dec',1,'p_dec','parser.py',144),
  ('dec -> structuredec','dec',1,'p_dec','parser.py',145),
  ('vardec -> type iddec newline','vardec',3,'p_vardec','parser.py',152),
  ('iddec -> id','iddec',1,'p_iddec','parser.py',167),
  ('iddec -> id comma iddec','iddec',3,'p_iddec','parser.py',168),
  ('iddec -> id equals literal','iddec',3,'p_iddec','parser.py',169),
  ('iddec -> id equals literal comma iddec','iddec',5,'p_iddec','parser.py',170),
  ('arraydec -> array type id newline','arraydec',4,'p_arraydec','parser.py',192),
  ('arraydec -> array type id equals openarray literalslist closearray newline','arraydec',8,'p_arraydec','parser.py',193),
  ('functiondec -> function id openparam paramlist closeparam newline','functiondec',6,'p_functiondec','parser.py',213),
  ('paramlist -> type id','paramlist',2,'p_paramlist','parser.py',224),
  ('paramlist -> type id COMMA paramlist','paramlist',4,'p_paramlist','parser.py',225),
  ('paramlist -> empty','paramlist',1,'p_paramlist','parser.py',226),
  ('functiondefn -> functiondec begin block returnstatement end','functiondefn',5,'p_functiondefn','parser.py',239),
  ('structuredec -> structure id newline begin newline decs end newline','structuredec',8,'p_structuredec','parser.py',254),
  ('literal -> STRINGLITERAL','literal',1,'p_literal','parser.py',261),
  ('literal -> INTEGERLITERAL','literal',1,'p_literal','parser.py',262),
  ('literal -> CHARLITERAL','literal',1,'p_literal','parser.py',263),
  ('literal -> DECIMALLITERAL','literal',1,'p_literal','parser.py',264),
  ('literal -> TRUE','literal',1,'p_literal','parser.py',265),
  ('literal -> FALSE','literal',1,'p_literal','parser.py',266),
  ('literalslist -> literal','literalslist',1,'p_literalslist','parser.py',274),
  ('literalslist -> literal comma literalslist','literalslist',3,'p_literalslist','parser.py',275),
  ('expression -> unaryop expression','expression',2,'p_expression','parser.py',286),
  ('expression -> indexaccess','expression',1,'p_expression','parser.py',287),
  ('expression -> memberaccess','expression',1,'p_expression','parser.py',288),
  ('expression -> functioncall','expression',1,'p_expression','parser.py',289),
  ('expression -> openparam expression closeparam','expression',3,'p_expression','parser.py',290),
  ('expression -> expression biop expression','expression',3,'p_expression','parser.py',291),
  ('expression -> primaryexpression','expression',1,'p_expression','parser.py',292),
  ('expression -> expression newline','expression',2,'p_expression','parser.py',293),
  ('expression -> expression equals expression','expression',3,'p_expression','parser.py',294),
  ('unaryop -> INCREMENT','unaryop',1,'p_unaryop','parser.py',306),
  ('unaryop -> DECREMENT','unaryop',1,'p_unaryop','parser.py',307),
  ('unaryop -> NOT','unaryop',1,'p_unaryop','parser.py',308),
  ('unaryop -> PLUS','unaryop',1,'p_unaryop','parser.py',309),
  ('unaryop -> MINUS','unaryop',1,'p_unaryop','parser.py',310),
  ('unaryop -> PERCENTAGE','unaryop',1,'p_unaryop','parser.py',311),
  ('biop -> MULTIPLY','biop',1,'p_biop','parser.py',324),
  ('biop -> DIVIDE','biop',1,'p_biop','parser.py',325),
  ('biop -> MODULO','biop',1,'p_biop','parser.py',326),
  ('biop -> PLUS','biop',1,'p_biop','parser.py',327),
  ('biop -> MINUS','biop',1,'p_biop','parser.py',328),
  ('biop -> AND','biop',1,'p_biop','parser.py',329),
  ('biop -> OR','biop',1,'p_biop','parser.py',330),
  ('biop -> LT','biop',1,'p_biop','parser.py',331),
  ('biop -> GT','biop',1,'p_biop','parser.py',332),
  ('biop -> LTE','biop',1,'p_biop','parser.py',333),
  ('biop -> GTE','biop',1,'p_biop','parser.py',334),
  ('biop -> EQUALCOMPARISON','biop',1,'p_biop','parser.py',335),
  ('biop -> NOTEQUALS','biop',1,'p_biop','parser.py',336),
  ('equals -> EQUALS','equals',1,'p_equals','parser.py',351),
  ('indexaccess -> expression openarray expression closearray','indexaccess',4,'p_indexaccess','parser.py',356),
  ('memberaccess -> expression of id','memberaccess',3,'p_memberaccess','parser.py',361),
  ('functioncall -> ID OPENPARAM callarguments CLOSEPARAM','functioncall',4,'p_functioncall','parser.py',366),
  ('callarguments -> id','callarguments',1,'p_callarguments','parser.py',377),
  ('callarguments -> literalslist','callarguments',1,'p_callarguments','parser.py',378),
  ('callarguments -> id comma callarguments','callarguments',3,'p_callarguments','parser.py',379),
  ('callarguments -> literalslist comma callarguments','callarguments',3,'p_callarguments','parser.py',380),
  ('primaryexpression -> literal','primaryexpression',1,'p_primaryexpression','parser.py',392),
  ('primaryexpression -> idknown','primaryexpression',1,'p_primaryexpression','parser.py',393),
  ('type -> INTEGER','type',1,'p_type','parser.py',401),
  ('type -> CHAR','type',1,'p_type','parser.py',402),
  ('type -> STRING','type',1,'p_type','parser.py',403),
  ('type -> BOOLEAN','type',1,'p_type','parser.py',404),
  ('type -> DECIMAL','type',1,'p_type','parser.py',405),
  ('type -> VAR','type',1,'p_type','parser.py',406),
  ('idknown -> ID','idknown',1,'p_idknown','parser.py',424),
  ('id -> ID','id',1,'p_id','parser.py',429),
  ('comma -> COMMA','comma',1,'p_comma','parser.py',434),
  ('of -> OF','of',1,'p_of','parser.py',439),
  ('openarray -> OPENARRAY','openarray',1,'p_openarray','parser.py',444),
  ('closearray -> CLOSEARRAY','closearray',1,'p_closearray','parser.py',449),
  ('openparam -> OPENPARAM','openparam',1,'p_openparam','parser.py',454),
  ('closeparam -> CLOSEPARAM','closeparam',1,'p_closeparam','parser.py',459),
  ('begin -> BEGIN','begin',1,'p_begin','parser.py',464),
  ('end -> END','end',1,'p_end','parser.py',469),
  ('structure -> STRUCTURE','structure',1,'p_structure','parser.py',474),
  ('function -> FUNCTION','function',1,'p_function','parser.py',479),
  ('array -> ARRAY','array',1,'p_array','parser.py',484),
  ('return -> RETURN','return',1,'p_return','parser.py',489),
  ('do -> DO','do',1,'p_do','parser.py',494),
  ('while -> WHILE','while',1,'p_while','parser.py',499),
  ('if -> IF','if',1,'p_if','parser.py',504),
  ('else -> ELSE','else',1,'p_else','parser.py',509),
  ('break -> BREAK','break',1,'p_break','parser.py',514),
  ('continue -> CONTINUE','continue',1,'p_continue','parser.py',519),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',524),
]
