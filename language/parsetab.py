
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY BEGIN BOOLEAN BREAK CHAR CHARLITERAL CLOSEARRAY CLOSEBLOCK CLOSEPARAM COMMA CONTINUE DECIMAL DECIMALLITERAL DECREMENT DIVIDE DO ELSE END EQUALCOMPARISON EQUALS FALSE FUNCTION GT GTE ID IF INCREMENT INTEGER INTEGERLITERAL LT LTE MINUS MODULO MULTIPLY NEWLINE NOT NOTEQUALS OF OPENARRAY OPENBLOCK OPENPARAM OR PERCENTAGE PLUS PROBLEM RETURN STRING STRINGLITERAL STRUCTURE TRUE VAR WHILEstart : PROBLEM ID newline programprogram : block\n\tnewline : NEWLINE\n\t\n\tstatement : ifstatement \n\t\t\t | whilestatement \n\t\t\t | dowhilestatement\n\t\t\t | continue newline\n\t\t\t | break newline\n\t\t\t | returnstatement\n\t\t\t | simplestatement\n\t\t\t | empty\n\t\t\t | newline\n\t\n\tblock : statement\n\t\t | statement block\n\t\n\tifstatement : if openparam expression closeparam newline begin block end\n\t\t\t   | if openparam expression closeparam newline begin block end else newline begin block end\n\t\n\twhilestatement : while openparam expression closeparam newline begin block end\n\tdowhilestatement : do newline begin block end newline while openparam expression closeparamreturnstatement : empty\n\t\t\t\t\t\t| return expression newline\n\tsimplestatement : decs\n\t\t\t\t\t| expression\n\t\n\tdecs : dec decs\n\t\t| dec\n\t\n\tdec : vardec\n\t\t| arraydec\n\t\t| functiondefn\n\t\t| functiondec\n\t\t| structuredec\n\tvardec : type iddec newline\n\tiddec : id \n\t\t| id comma iddec\n\t\t| id equals literal \n\t\t| id equals literal comma iddec\n\t\n\tarraydec : array type id newline\n\t\t\t| array type id equals openarray literalslist closearray newline\n\t\n\tfunctiondec : function id openparam paramlist closeparam newline\n\t\n\tparamlist : type id\n\t\t\t\t| type id COMMA paramlist\n\t\t\t\t| empty\n\t\n\tfunctiondefn : functiondec begin block returnstatement end\n\tstructuredec : structure id newline begin newline decs end newline\n\tliteral : STRINGLITERAL\n\t\t   | INTEGERLITERAL\n\t\t   | CHARLITERAL\n\t\t   | DECIMALLITERAL\n\t\t   | TRUE\n\t\t   | FALSE\n\t\n\tliteralslist : literal\n\t\t\t\t | literal comma literalslist\n\t\n\texpression : unaryop expression\n\t\t\t  | indexaccess\n\t\t\t  | memberaccess\n\t\t\t  | functioncall\n\t\t\t  | openparam expression closeparam\n\t\t\t  | expression biop expression\n\t\t\t  | primaryexpression\n\t\t\t  | expression newline\n\t\t\t  | expression equals expression\n\t\n\tunaryop : INCREMENT\n\t\t   | DECREMENT\n\t\t   | NOT\n\t\t   | PLUS\n\t\t   | MINUS\n\t\t   | PERCENTAGE\n\t\n\tbiop : MULTIPLY\n\t\t| DIVIDE\n\t\t| MODULO\n\t\t| PLUS\n\t\t| MINUS\n\t\t| AND\n\t\t| OR\n\t\t| LT\n\t\t| GT\n\t\t| LTE\n\t\t| GTE\n\t\t| EQUALCOMPARISON\n\t\t| NOTEQUALS\n\tequals : EQUALSindexaccess : expression openarray expression closearraymemberaccess : expression of idfunctioncall : ID OPENPARAM callarguments CLOSEPARAM\n\tcallarguments : id\n\t\t\t\t | literalslist\n\t\t\t\t | id comma callarguments\n\t\t\t\t | literalslist comma callarguments\n\t\n\tprimaryexpression : literal\n\t\t\t\t\t | idknown\n\t\n\ttype : INTEGER\n\t\t| CHAR\n\t\t| STRING\n\t\t| BOOLEAN\n\t\t| DECIMAL\n\t\t| VAR\n\tidknown : IDid : IDcomma : COMMAof : OFopenarray : OPENARRAYclosearray : CLOSEARRAYopenparam : OPENPARAMcloseparam : CLOSEPARAMbegin : BEGINend : ENDstructure : STRUCTUREfunction : FUNCTIONarray : ARRAYreturn : RETURNdo : DOwhile : WHILEif : IFelse : ELSEbreak : BREAKcontinue : CONTINUEempty : '
    
_lr_action_items = {'DO':([4,5,7,9,10,11,14,15,21,26,27,28,31,32,34,36,42,44,45,49,50,52,56,57,59,63,65,66,67,68,70,76,81,82,83,84,88,89,102,113,114,115,120,121,129,131,132,133,144,150,151,158,159,166,168,172,179,180,182,183,188,189,191,],[-3,6,-25,-57,-26,-6,-43,-53,-47,-5,-87,-27,6,-46,-21,-11,-44,-12,-10,-52,-28,-95,-48,-88,-29,-54,-9,-24,-22,-45,-4,-96,-51,-8,6,-103,-7,-23,-58,-102,-55,-30,6,-20,-56,-59,-81,-35,-82,-80,-100,-104,-41,6,-37,6,-36,-15,-42,-17,-18,6,-16,]),'RETURN':([4,5,7,9,10,11,14,15,21,26,27,28,31,32,34,36,42,44,45,49,50,52,56,57,59,63,65,66,67,68,70,74,76,81,82,83,84,88,89,102,113,114,115,120,121,122,129,131,132,133,144,150,151,158,159,166,168,172,179,180,182,183,188,189,191,],[-3,8,-25,-57,-26,-6,-43,-53,-47,-5,-87,-27,8,-46,-21,-11,-44,-12,-10,-52,-28,-95,-48,-88,-29,-54,-9,-24,-22,-45,-4,-14,-96,-51,-8,8,-103,-7,-23,-58,-102,-55,-30,8,-20,8,-56,-59,-81,-35,-82,-80,-100,-104,-41,8,-37,8,-36,-15,-42,-17,-18,8,-16,]),'NOTEQUALS':([4,9,14,15,21,27,32,42,49,52,56,57,63,67,68,73,76,80,81,102,112,113,114,121,128,129,130,131,132,144,150,151,186,],[-3,-57,-43,-53,-47,-87,-46,-44,-52,-95,-48,-88,-54,90,-45,90,-96,90,90,-58,90,-102,-55,-58,90,90,90,90,-81,-82,-80,-100,90,]),'OPENPARAM':([4,5,7,8,9,10,11,12,14,15,16,21,22,23,25,26,27,28,30,31,32,33,34,36,39,40,41,42,44,45,49,50,52,54,56,57,58,59,61,63,64,65,66,67,68,70,72,76,78,81,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,113,114,115,120,121,129,131,132,133,144,150,151,158,159,166,168,172,176,179,180,181,182,183,188,189,191,],[-3,12,-25,-108,-57,-26,-6,-101,-43,-53,-110,-47,-64,12,12,-5,-87,-27,-63,12,-46,-65,-21,-11,12,-60,12,-44,-12,-10,-52,-28,85,-111,-48,-88,-61,-29,12,-54,-62,-9,-24,-22,-45,-4,12,-96,12,-51,-8,12,-103,12,-7,-23,-78,-66,-70,-99,-76,12,-73,-69,12,-74,-68,-67,-58,12,-79,-75,-71,-77,-72,-102,-55,-30,12,-20,-56,-59,-81,-35,-82,-80,-100,-104,-41,12,-37,12,12,-36,-15,12,-42,-17,-18,12,-16,]),'STRINGLITERAL':([4,5,7,8,9,10,11,12,14,15,21,22,25,26,27,28,30,31,32,33,34,36,39,40,41,42,44,45,49,50,52,56,57,58,59,63,64,65,66,67,68,70,72,76,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,113,114,115,116,117,120,121,129,131,132,133,144,145,146,147,150,151,152,158,159,166,168,172,179,180,181,182,183,188,189,191,],[-3,14,-25,-108,-57,-26,-6,-101,-43,-53,-47,-64,14,-5,-87,-27,-63,14,-46,-65,-21,-11,14,-60,14,-44,-12,-10,-52,-28,-95,-48,-88,-61,-29,-54,-62,-9,-24,-22,-45,-4,14,-96,-51,-8,14,-103,14,14,-7,-23,-78,-66,-70,-99,-76,14,-73,-69,14,-74,-68,-67,-58,14,-79,-75,-71,-77,-72,-102,-55,-30,14,-97,14,-20,-56,-59,-81,-35,-82,14,14,14,-80,-100,14,-104,-41,14,-37,14,-36,-15,14,-42,-17,-18,14,-16,]),'CHAR':([4,5,7,9,10,11,12,13,14,15,20,21,26,27,28,31,32,34,36,42,44,45,49,50,52,56,57,59,63,65,66,67,68,70,76,81,82,83,84,88,89,102,113,114,115,119,120,121,129,131,132,133,144,150,151,158,159,163,166,168,169,172,179,180,182,183,188,189,191,],[-3,55,-25,-57,-26,-6,-101,-107,-43,-53,55,-47,-5,-87,-27,55,-46,-21,-11,-44,-12,-10,-52,-28,-95,-48,-88,-29,-54,-9,55,-22,-45,-4,-96,-51,-8,55,-103,-7,-23,-58,-102,-55,-30,55,55,-20,-56,-59,-81,-35,-82,-80,-100,-104,-41,55,55,-37,55,55,-36,-15,-42,-17,-18,55,-16,]),'WHILE':([4,5,7,9,10,11,14,15,21,26,27,28,31,32,34,36,42,44,45,49,50,52,56,57,59,63,65,66,67,68,70,76,81,82,83,84,88,89,102,113,114,115,120,121,129,131,132,133,144,150,151,158,159,166,168,170,172,179,180,182,183,188,189,191,],[-3,16,-25,-57,-26,-6,-43,-53,-47,-5,-87,-27,16,-46,-21,-11,-44,-12,-10,-52,-28,-95,-48,-88,-29,-54,-9,-24,-22,-45,-4,-96,-51,-8,16,-103,-7,-23,-58,-102,-55,-30,16,-20,-56,-59,-81,-35,-82,-80,-100,-104,-41,16,-37,16,16,-36,-15,-42,-17,-18,16,-16,]),'MULTIPLY':([4,9,14,15,21,27,32,42,49,52,56,57,63,67,68,73,76,80,81,102,112,113,114,121,128,129,130,131,132,144,150,151,186,],[-3,-57,-43,-53,-47,-87,-46,-44,-52,-95,-48,-88,-54,91,-45,91,-96,91,91,-58,91,-102,-55,-58,91,91,91,91,-81,-82,-80,-100,91,]),'END':([4,7,9,10,11,14,15,21,26,27,28,31,32,34,36,42,44,45,49,50,52,56,57,59,63,65,66,67,68,70,74,76,81,82,83,84,88,89,102,113,114,115,120,121,122,129,131,132,133,141,142,143,144,150,151,158,159,166,168,171,172,174,178,179,180,182,183,188,189,190,191,],[-3,-25,-57,-26,-6,-43,-53,-47,-5,-87,-27,-13,-46,-21,-11,-44,-12,-10,-52,-28,-95,-48,-88,-29,-54,-9,-24,-22,-45,-4,-14,-96,-51,-8,-115,-103,-7,-23,-58,-102,-55,-30,-115,-20,-115,-56,-59,-81,-35,158,158,-19,-82,-80,-100,-104,-41,-115,-37,158,-115,158,158,-36,-15,-42,-17,-18,-115,158,-16,]),'TRUE':([4,5,7,8,9,10,11,12,14,15,21,22,25,26,27,28,30,31,32,33,34,36,39,40,41,42,44,45,49,50,52,56,57,58,59,63,64,65,66,67,68,70,72,76,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,113,114,115,116,117,120,121,129,131,132,133,144,145,146,147,150,151,152,158,159,166,168,172,179,180,181,182,183,188,189,191,],[-3,21,-25,-108,-57,-26,-6,-101,-43,-53,-47,-64,21,-5,-87,-27,-63,21,-46,-65,-21,-11,21,-60,21,-44,-12,-10,-52,-28,-95,-48,-88,-61,-29,-54,-62,-9,-24,-22,-45,-4,21,-96,-51,-8,21,-103,21,21,-7,-23,-78,-66,-70,-99,-76,21,-73,-69,21,-74,-68,-67,-58,21,-79,-75,-71,-77,-72,-102,-55,-30,21,-97,21,-20,-56,-59,-81,-35,-82,21,21,21,-80,-100,21,-104,-41,21,-37,21,-36,-15,21,-42,-17,-18,21,-16,]),'INTEGERLITERAL':([4,5,7,8,9,10,11,12,14,15,21,22,25,26,27,28,30,31,32,33,34,36,39,40,41,42,44,45,49,50,52,56,57,58,59,63,64,65,66,67,68,70,72,76,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,113,114,115,116,117,120,121,129,131,132,133,144,145,146,147,150,151,152,158,159,166,168,172,179,180,181,182,183,188,189,191,],[-3,42,-25,-108,-57,-26,-6,-101,-43,-53,-47,-64,42,-5,-87,-27,-63,42,-46,-65,-21,-11,42,-60,42,-44,-12,-10,-52,-28,-95,-48,-88,-61,-29,-54,-62,-9,-24,-22,-45,-4,42,-96,-51,-8,42,-103,42,42,-7,-23,-78,-66,-70,-99,-76,42,-73,-69,42,-74,-68,-67,-58,42,-79,-75,-71,-77,-72,-102,-55,-30,42,-97,42,-20,-56,-59,-81,-35,-82,42,42,42,-80,-100,42,-104,-41,42,-37,42,-36,-15,42,-42,-17,-18,42,-16,]),'OPENARRAY':([4,9,14,15,21,27,32,42,49,52,56,57,63,67,68,73,76,80,81,102,104,112,113,114,121,128,129,130,131,132,134,144,150,151,186,],[-3,-57,-43,-53,-47,-87,-46,-44,-52,-95,-48,-88,-54,93,-45,93,-96,93,93,-58,-79,93,-102,-55,-58,93,93,93,93,-81,93,-82,-80,-100,93,]),'STRING':([4,5,7,9,10,11,12,13,14,15,20,21,26,27,28,31,32,34,36,42,44,45,49,50,52,56,57,59,63,65,66,67,68,70,76,81,82,83,84,88,89,102,113,114,115,119,120,121,129,131,132,133,144,150,151,158,159,163,166,168,169,172,179,180,182,183,188,189,191,],[-3,17,-25,-57,-26,-6,-101,-107,-43,-53,17,-47,-5,-87,-27,17,-46,-21,-11,-44,-12,-10,-52,-28,-95,-48,-88,-29,-54,-9,17,-22,-45,-4,-96,-51,-8,17,-103,-7,-23,-58,-102,-55,-30,17,17,-20,-56,-59,-81,-35,-82,-80,-100,-104,-41,17,17,-37,17,17,-36,-15,-42,-17,-18,17,-16,]),'BEGIN':([4,50,79,127,153,164,168,187,],[-3,84,84,84,84,84,-37,84,]),'PERCENTAGE':([4,5,7,8,9,10,11,12,14,15,21,22,25,26,27,28,30,31,32,33,34,36,39,40,41,42,44,45,49,50,52,56,57,58,59,63,64,65,66,67,68,70,72,76,81,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,113,114,115,120,121,129,131,132,133,144,150,151,158,159,166,168,172,179,180,181,182,183,188,189,191,],[-3,33,-25,-108,-57,-26,-6,-101,-43,-53,-47,-64,33,-5,-87,-27,-63,33,-46,-65,-21,-11,33,-60,33,-44,-12,-10,-52,-28,-95,-48,-88,-61,-29,-54,-62,-9,-24,-22,-45,-4,33,-96,-51,-8,33,-103,33,-7,-23,-78,-66,-70,-99,-76,33,-73,-69,33,-74,-68,-67,-58,33,-79,-75,-71,-77,-72,-102,-55,-30,33,-20,-56,-59,-81,-35,-82,-80,-100,-104,-41,33,-37,33,-36,-15,33,-42,-17,-18,33,-16,]),'CHARLITERAL':([4,5,7,8,9,10,11,12,14,15,21,22,25,26,27,28,30,31,32,33,34,36,39,40,41,42,44,45,49,50,52,56,57,58,59,63,64,65,66,67,68,70,72,76,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,113,114,115,116,117,120,121,129,131,132,133,144,145,146,147,150,151,152,158,159,166,168,172,179,180,181,182,183,188,189,191,],[-3,68,-25,-108,-57,-26,-6,-101,-43,-53,-47,-64,68,-5,-87,-27,-63,68,-46,-65,-21,-11,68,-60,68,-44,-12,-10,-52,-28,-95,-48,-88,-61,-29,-54,-62,-9,-24,-22,-45,-4,68,-96,-51,-8,68,-103,68,68,-7,-23,-78,-66,-70,-99,-76,68,-73,-69,68,-74,-68,-67,-58,68,-79,-75,-71,-77,-72,-102,-55,-30,68,-97,68,-20,-56,-59,-81,-35,-82,68,68,68,-80,-100,68,-104,-41,68,-37,68,-36,-15,68,-42,-17,-18,68,-16,]),'NEWLINE':([3,4,5,6,7,9,10,11,14,15,19,21,26,27,28,31,32,34,36,38,42,44,45,46,49,50,52,56,57,59,60,62,63,65,66,67,68,70,73,75,76,77,80,81,82,83,84,86,88,89,102,111,112,113,114,115,120,121,128,129,130,131,132,133,135,136,137,144,148,149,150,151,155,157,158,159,166,167,168,172,173,177,179,180,182,183,184,185,186,188,189,191,],[4,-3,4,-109,-25,-57,-26,-6,-43,-53,-114,-47,-5,-87,-27,4,-46,-21,-11,4,-44,-12,-10,4,-52,-28,-95,-48,-88,-29,-113,4,-54,-9,-24,4,-45,-4,4,4,-96,-31,4,4,-8,4,-103,4,-7,-23,-58,4,4,-102,-55,-30,4,-20,4,4,4,4,-81,-35,4,-33,-32,-82,4,4,-80,-100,4,4,-104,-41,4,-34,-37,4,4,4,-36,-15,-42,-17,4,-112,4,-18,4,-16,]),'MINUS':([4,5,7,8,9,10,11,12,14,15,21,22,25,26,27,28,30,31,32,33,34,36,39,40,41,42,44,45,49,50,52,56,57,58,59,63,64,65,66,67,68,70,72,73,76,80,81,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,112,113,114,115,120,121,128,129,130,131,132,133,144,150,151,158,159,166,168,172,179,180,181,182,183,186,188,189,191,],[-3,22,-25,-108,-57,-26,-6,-101,-43,-53,-47,-64,22,-5,-87,-27,-63,22,-46,-65,-21,-11,22,-60,22,-44,-12,-10,-52,-28,-95,-48,-88,-61,-29,-54,-62,-9,-24,92,-45,-4,22,92,-96,92,92,-8,22,-103,22,-7,-23,-78,-66,-70,-99,-76,22,-73,-69,22,-74,-68,-67,-58,22,-79,-75,-71,-77,-72,92,-102,-55,-30,22,-20,92,92,92,92,-81,-35,-82,-80,-100,-104,-41,22,-37,22,-36,-15,22,-42,-17,92,-18,22,-16,]),'LT':([4,9,14,15,21,27,32,42,49,52,56,57,63,67,68,73,76,80,81,102,112,113,114,121,128,129,130,131,132,144,150,151,186,],[-3,-57,-43,-53,-47,-87,-46,-44,-52,-95,-48,-88,-54,96,-45,96,-96,96,96,-58,96,-102,-55,-58,96,96,96,96,-81,-82,-80,-100,96,]),'CONTINUE':([4,5,7,9,10,11,14,15,21,26,27,28,31,32,34,36,42,44,45,49,50,52,56,57,59,63,65,66,67,68,70,76,81,82,83,84,88,89,102,113,114,115,120,121,129,131,132,133,144,150,151,158,159,166,168,172,179,180,182,183,188,189,191,],[-3,19,-25,-57,-26,-6,-43,-53,-47,-5,-87,-27,19,-46,-21,-11,-44,-12,-10,-52,-28,-95,-48,-88,-29,-54,-9,-24,-22,-45,-4,-96,-51,-8,19,-103,-7,-23,-58,-102,-55,-30,19,-20,-56,-59,-81,-35,-82,-80,-100,-104,-41,19,-37,19,-36,-15,-42,-17,-18,19,-16,]),'PLUS':([4,5,7,8,9,10,11,12,14,15,21,22,25,26,27,28,30,31,32,33,34,36,39,40,41,42,44,45,49,50,52,56,57,58,59,63,64,65,66,67,68,70,72,73,76,80,81,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,112,113,114,115,120,121,128,129,130,131,132,133,144,150,151,158,159,166,168,172,179,180,181,182,183,186,188,189,191,],[-3,30,-25,-108,-57,-26,-6,-101,-43,-53,-47,-64,30,-5,-87,-27,-63,30,-46,-65,-21,-11,30,-60,30,-44,-12,-10,-52,-28,-95,-48,-88,-61,-29,-54,-62,-9,-24,97,-45,-4,30,97,-96,97,97,-8,30,-103,30,-7,-23,-78,-66,-70,-99,-76,30,-73,-69,30,-74,-68,-67,-58,30,-79,-75,-71,-77,-72,97,-102,-55,-30,30,-20,97,97,97,97,-81,-35,-82,-80,-100,-104,-41,30,-37,30,-36,-15,30,-42,-17,97,-18,30,-16,]),'INCREMENT':([4,5,7,8,9,10,11,12,14,15,21,22,25,26,27,28,30,31,32,33,34,36,39,40,41,42,44,45,49,50,52,56,57,58,59,63,64,65,66,67,68,70,72,76,81,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,113,114,115,120,121,129,131,132,133,144,150,151,158,159,166,168,172,179,180,181,182,183,188,189,191,],[-3,40,-25,-108,-57,-26,-6,-101,-43,-53,-47,-64,40,-5,-87,-27,-63,40,-46,-65,-21,-11,40,-60,40,-44,-12,-10,-52,-28,-95,-48,-88,-61,-29,-54,-62,-9,-24,-22,-45,-4,40,-96,-51,-8,40,-103,40,-7,-23,-78,-66,-70,-99,-76,40,-73,-69,40,-74,-68,-67,-58,40,-79,-75,-71,-77,-72,-102,-55,-30,40,-20,-56,-59,-81,-35,-82,-80,-100,-104,-41,40,-37,40,-36,-15,40,-42,-17,-18,40,-16,]),'INTEGER':([4,5,7,9,10,11,12,13,14,15,20,21,26,27,28,31,32,34,36,42,44,45,49,50,52,56,57,59,63,65,66,67,68,70,76,81,82,83,84,88,89,102,113,114,115,119,120,121,129,131,132,133,144,150,151,158,159,163,166,168,169,172,179,180,182,183,188,189,191,],[-3,47,-25,-57,-26,-6,-101,-107,-43,-53,47,-47,-5,-87,-27,47,-46,-21,-11,-44,-12,-10,-52,-28,-95,-48,-88,-29,-54,-9,47,-22,-45,-4,-96,-51,-8,47,-103,-7,-23,-58,-102,-55,-30,47,47,-20,-56,-59,-81,-35,-82,-80,-100,-104,-41,47,47,-37,47,47,-36,-15,-42,-17,-18,47,-16,]),'ARRAY':([4,5,7,9,10,11,14,15,21,26,27,28,31,32,34,36,42,44,45,49,50,52,56,57,59,63,65,66,67,68,70,76,81,82,83,84,88,89,102,113,114,115,120,121,129,131,132,133,144,150,151,158,159,163,166,168,172,179,180,182,183,188,189,191,],[-3,13,-25,-57,-26,-6,-43,-53,-47,-5,-87,-27,13,-46,-21,-11,-44,-12,-10,-52,-28,-95,-48,-88,-29,-54,-9,13,-22,-45,-4,-96,-51,-8,13,-103,-7,-23,-58,-102,-55,-30,13,-20,-56,-59,-81,-35,-82,-80,-100,-104,-41,13,13,-37,13,-36,-15,-42,-17,-18,13,-16,]),'CLOSEPARAM':([4,9,12,14,15,21,27,32,42,49,52,56,57,63,68,73,76,81,102,112,113,114,119,123,124,125,126,128,129,131,132,138,140,144,150,151,156,160,161,162,169,175,186,],[-3,-57,-101,-43,-53,-47,-87,-46,-44,-52,-95,-48,-88,-54,-45,113,-96,-51,-58,113,-102,-55,-115,144,-49,-84,-83,113,-56,-59,-81,113,-40,-82,-80,-100,-38,-50,-86,-85,-115,-39,113,]),'$end':([1,4,5,7,9,10,11,14,15,21,26,27,28,29,31,32,34,36,42,44,45,49,50,52,56,57,59,63,65,66,67,68,69,70,74,76,81,82,88,89,102,113,114,115,121,129,131,132,133,144,150,151,158,159,168,179,180,182,183,188,191,],[0,-3,-115,-25,-57,-26,-6,-43,-53,-47,-5,-87,-27,-1,-13,-46,-21,-11,-44,-12,-10,-52,-28,-95,-48,-88,-29,-54,-9,-24,-22,-45,-2,-4,-14,-96,-51,-8,-7,-23,-58,-102,-55,-30,-20,-56,-59,-81,-35,-82,-80,-100,-104,-41,-37,-36,-15,-42,-17,-18,-16,]),'FUNCTION':([4,5,7,9,10,11,14,15,21,26,27,28,31,32,34,36,42,44,45,49,50,52,56,57,59,63,65,66,67,68,70,76,81,82,83,84,88,89,102,113,114,115,120,121,129,131,132,133,144,150,151,158,159,163,166,168,172,179,180,182,183,188,189,191,],[-3,51,-25,-57,-26,-6,-43,-53,-47,-5,-87,-27,51,-46,-21,-11,-44,-12,-10,-52,-28,-95,-48,-88,-29,-54,-9,51,-22,-45,-4,-96,-51,-8,51,-103,-7,-23,-58,-102,-55,-30,51,-20,-56,-59,-81,-35,-82,-80,-100,-104,-41,51,51,-37,51,-36,-15,-42,-17,-18,51,-16,]),'GT':([4,9,14,15,21,27,32,42,49,52,56,57,63,67,68,73,76,80,81,102,112,113,114,121,128,129,130,131,132,144,150,151,186,],[-3,-57,-43,-53,-47,-87,-46,-44,-52,-95,-48,-88,-54,99,-45,99,-96,99,99,-58,99,-102,-55,-58,99,99,99,99,-81,-82,-80,-100,99,]),'MODULO':([4,9,14,15,21,27,32,42,49,52,56,57,63,67,68,73,76,80,81,102,112,113,114,121,128,129,130,131,132,144,150,151,186,],[-3,-57,-43,-53,-47,-87,-46,-44,-52,-95,-48,-88,-54,100,-45,100,-96,100,100,-58,100,-102,-55,-58,100,100,100,100,-81,-82,-80,-100,100,]),'DIVIDE':([4,9,14,15,21,27,32,42,49,52,56,57,63,67,68,73,76,80,81,102,112,113,114,121,128,129,130,131,132,144,150,151,186,],[-3,-57,-43,-53,-47,-87,-46,-44,-52,-95,-48,-88,-54,101,-45,101,-96,101,101,-58,101,-102,-55,-58,101,101,101,101,-81,-82,-80,-100,101,]),'CLOSEARRAY':([4,9,14,15,21,27,32,42,49,52,56,57,63,68,76,81,102,113,114,124,129,130,131,132,144,150,151,160,165,],[-3,-57,-43,-53,-47,-87,-46,-44,-52,-95,-48,-88,-54,-45,-96,-51,-58,-102,-55,-49,-56,151,-59,-81,-82,-80,-100,-50,151,]),'DECIMAL':([4,5,7,9,10,11,12,13,14,15,20,21,26,27,28,31,32,34,36,42,44,45,49,50,52,56,57,59,63,65,66,67,68,70,76,81,82,83,84,88,89,102,113,114,115,119,120,121,129,131,132,133,144,150,151,158,159,163,166,168,169,172,179,180,182,183,188,189,191,],[-3,43,-25,-57,-26,-6,-101,-107,-43,-53,43,-47,-5,-87,-27,43,-46,-21,-11,-44,-12,-10,-52,-28,-95,-48,-88,-29,-54,-9,43,-22,-45,-4,-96,-51,-8,43,-103,-7,-23,-58,-102,-55,-30,43,43,-20,-56,-59,-81,-35,-82,-80,-100,-104,-41,43,43,-37,43,43,-36,-15,-42,-17,-18,43,-16,]),'EQUALS':([4,9,14,15,21,27,32,42,49,52,56,57,63,67,68,73,76,77,80,81,102,111,112,113,114,121,128,129,130,131,132,144,150,151,186,],[-3,-57,-43,-53,-47,-87,-46,-44,-52,-95,-48,-88,-54,104,-45,104,-96,104,104,104,-58,104,104,-102,-55,-58,104,104,104,104,-81,-82,-80,-100,104,]),'ELSE':([158,180,],[-104,185,]),'LTE':([4,9,14,15,21,27,32,42,49,52,56,57,63,67,68,73,76,80,81,102,112,113,114,121,128,129,130,131,132,144,150,151,186,],[-3,-57,-43,-53,-47,-87,-46,-44,-52,-95,-48,-88,-54,105,-45,105,-96,105,105,-58,105,-102,-55,-58,105,105,105,105,-81,-82,-80,-100,105,]),'VAR':([4,5,7,9,10,11,12,13,14,15,20,21,26,27,28,31,32,34,36,42,44,45,49,50,52,56,57,59,63,65,66,67,68,70,76,81,82,83,84,88,89,102,113,114,115,119,120,121,129,131,132,133,144,150,151,158,159,163,166,168,169,172,179,180,182,183,188,189,191,],[-3,48,-25,-57,-26,-6,-101,-107,-43,-53,48,-47,-5,-87,-27,48,-46,-21,-11,-44,-12,-10,-52,-28,-95,-48,-88,-29,-54,-9,48,-22,-45,-4,-96,-51,-8,48,-103,-7,-23,-58,-102,-55,-30,48,48,-20,-56,-59,-81,-35,-82,-80,-100,-104,-41,48,48,-37,48,48,-36,-15,-42,-17,-18,48,-16,]),'PROBLEM':([0,],[2,]),'ID':([2,4,5,7,8,9,10,11,12,14,15,17,18,21,22,24,25,26,27,28,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,47,48,49,50,51,52,53,55,56,57,58,59,63,64,65,66,67,68,70,71,72,76,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,117,118,120,121,129,131,132,133,139,144,146,147,150,151,154,158,159,166,168,172,179,180,181,182,183,188,189,191,],[3,-3,52,-25,-108,-57,-26,-6,-101,-43,-53,-91,-105,-47,-64,-92,52,-5,-87,-27,-63,52,-46,-65,-21,76,-11,76,52,-60,52,-44,-93,-12,-10,-89,-94,-52,-28,-106,-95,76,-90,-48,-88,-61,-29,-54,-62,-9,-24,-22,-45,-4,76,52,-96,-51,-8,52,-103,76,52,-7,-23,-78,-66,-70,-99,-76,52,-73,-69,52,-74,-68,-67,-58,52,-79,-75,-71,76,-77,-98,-72,-102,-55,-30,-97,76,52,-20,-56,-59,-81,-35,76,-82,76,76,-80,-100,76,-104,-41,52,-37,52,-36,-15,52,-42,-17,-18,52,-16,]),'IF':([4,5,7,9,10,11,14,15,21,26,27,28,31,32,34,36,42,44,45,49,50,52,56,57,59,63,65,66,67,68,70,76,81,82,83,84,88,89,102,113,114,115,120,121,129,131,132,133,144,150,151,158,159,166,168,172,179,180,182,183,188,189,191,],[-3,54,-25,-57,-26,-6,-43,-53,-47,-5,-87,-27,54,-46,-21,-11,-44,-12,-10,-52,-28,-95,-48,-88,-29,-54,-9,-24,-22,-45,-4,-96,-51,-8,54,-103,-7,-23,-58,-102,-55,-30,54,-20,-56,-59,-81,-35,-82,-80,-100,-104,-41,54,-37,54,-36,-15,-42,-17,-18,54,-16,]),'AND':([4,9,14,15,21,27,32,42,49,52,56,57,63,67,68,73,76,80,81,102,112,113,114,121,128,129,130,131,132,144,150,151,186,],[-3,-57,-43,-53,-47,-87,-46,-44,-52,-95,-48,-88,-54,106,-45,106,-96,106,106,-58,106,-102,-55,-58,106,106,106,106,-81,-82,-80,-100,106,]),'FALSE':([4,5,7,8,9,10,11,12,14,15,21,22,25,26,27,28,30,31,32,33,34,36,39,40,41,42,44,45,49,50,52,56,57,58,59,63,64,65,66,67,68,70,72,76,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,113,114,115,116,117,120,121,129,131,132,133,144,145,146,147,150,151,152,158,159,166,168,172,179,180,181,182,183,188,189,191,],[-3,56,-25,-108,-57,-26,-6,-101,-43,-53,-47,-64,56,-5,-87,-27,-63,56,-46,-65,-21,-11,56,-60,56,-44,-12,-10,-52,-28,-95,-48,-88,-61,-29,-54,-62,-9,-24,-22,-45,-4,56,-96,-51,-8,56,-103,56,56,-7,-23,-78,-66,-70,-99,-76,56,-73,-69,56,-74,-68,-67,-58,56,-79,-75,-71,-77,-72,-102,-55,-30,56,-97,56,-20,-56,-59,-81,-35,-82,56,56,56,-80,-100,56,-104,-41,56,-37,56,-36,-15,56,-42,-17,-18,56,-16,]),'OF':([4,9,14,15,21,27,32,42,49,52,56,57,63,67,68,73,76,80,81,102,112,113,114,121,128,129,130,131,132,144,150,151,186,],[-3,-57,-43,-53,-47,-87,-46,-44,-52,-95,-48,-88,-54,109,-45,109,-96,109,109,-58,109,-102,-55,-58,109,109,109,109,-81,-82,-80,-100,109,]),'GTE':([4,9,14,15,21,27,32,42,49,52,56,57,63,67,68,73,76,80,81,102,112,113,114,121,128,129,130,131,132,144,150,151,186,],[-3,-57,-43,-53,-47,-87,-46,-44,-52,-95,-48,-88,-54,94,-45,94,-96,94,94,-58,94,-102,-55,-58,94,94,94,94,-81,-82,-80,-100,94,]),'EQUALCOMPARISON':([4,9,14,15,21,27,32,42,49,52,56,57,63,67,68,73,76,80,81,102,112,113,114,121,128,129,130,131,132,144,150,151,186,],[-3,-57,-43,-53,-47,-87,-46,-44,-52,-95,-48,-88,-54,108,-45,108,-96,108,108,-58,108,-102,-55,-58,108,108,108,108,-81,-82,-80,-100,108,]),'BREAK':([4,5,7,9,10,11,14,15,21,26,27,28,31,32,34,36,42,44,45,49,50,52,56,57,59,63,65,66,67,68,70,76,81,82,83,84,88,89,102,113,114,115,120,121,129,131,132,133,144,150,151,158,159,166,168,172,179,180,182,183,188,189,191,],[-3,60,-25,-57,-26,-6,-43,-53,-47,-5,-87,-27,60,-46,-21,-11,-44,-12,-10,-52,-28,-95,-48,-88,-29,-54,-9,-24,-22,-45,-4,-96,-51,-8,60,-103,-7,-23,-58,-102,-55,-30,60,-20,-56,-59,-81,-35,-82,-80,-100,-104,-41,60,-37,60,-36,-15,-42,-17,-18,60,-16,]),'BOOLEAN':([4,5,7,9,10,11,12,13,14,15,20,21,26,27,28,31,32,34,36,42,44,45,49,50,52,56,57,59,63,65,66,67,68,70,76,81,82,83,84,88,89,102,113,114,115,119,120,121,129,131,132,133,144,150,151,158,159,163,166,168,169,172,179,180,182,183,188,189,191,],[-3,24,-25,-57,-26,-6,-101,-107,-43,-53,24,-47,-5,-87,-27,24,-46,-21,-11,-44,-12,-10,-52,-28,-95,-48,-88,-29,-54,-9,24,-22,-45,-4,-96,-51,-8,24,-103,-7,-23,-58,-102,-55,-30,24,24,-20,-56,-59,-81,-35,-82,-80,-100,-104,-41,24,24,-37,24,24,-36,-15,-42,-17,-18,24,-16,]),'DECIMALLITERAL':([4,5,7,8,9,10,11,12,14,15,21,22,25,26,27,28,30,31,32,33,34,36,39,40,41,42,44,45,49,50,52,56,57,58,59,63,64,65,66,67,68,70,72,76,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,113,114,115,116,117,120,121,129,131,132,133,144,145,146,147,150,151,152,158,159,166,168,172,179,180,181,182,183,188,189,191,],[-3,32,-25,-108,-57,-26,-6,-101,-43,-53,-47,-64,32,-5,-87,-27,-63,32,-46,-65,-21,-11,32,-60,32,-44,-12,-10,-52,-28,-95,-48,-88,-61,-29,-54,-62,-9,-24,-22,-45,-4,32,-96,-51,-8,32,-103,32,32,-7,-23,-78,-66,-70,-99,-76,32,-73,-69,32,-74,-68,-67,-58,32,-79,-75,-71,-77,-72,-102,-55,-30,32,-97,32,-20,-56,-59,-81,-35,-82,32,32,32,-80,-100,32,-104,-41,32,-37,32,-36,-15,32,-42,-17,-18,32,-16,]),'NOT':([4,5,7,8,9,10,11,12,14,15,21,22,25,26,27,28,30,31,32,33,34,36,39,40,41,42,44,45,49,50,52,56,57,58,59,63,64,65,66,67,68,70,72,76,81,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,113,114,115,120,121,129,131,132,133,144,150,151,158,159,166,168,172,179,180,181,182,183,188,189,191,],[-3,64,-25,-108,-57,-26,-6,-101,-43,-53,-47,-64,64,-5,-87,-27,-63,64,-46,-65,-21,-11,64,-60,64,-44,-12,-10,-52,-28,-95,-48,-88,-61,-29,-54,-62,-9,-24,-22,-45,-4,64,-96,-51,-8,64,-103,64,-7,-23,-78,-66,-70,-99,-76,64,-73,-69,64,-74,-68,-67,-58,64,-79,-75,-71,-77,-72,-102,-55,-30,64,-20,-56,-59,-81,-35,-82,-80,-100,-104,-41,64,-37,64,-36,-15,64,-42,-17,-18,64,-16,]),'DECREMENT':([4,5,7,8,9,10,11,12,14,15,21,22,25,26,27,28,30,31,32,33,34,36,39,40,41,42,44,45,49,50,52,56,57,58,59,63,64,65,66,67,68,70,72,76,81,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,110,113,114,115,120,121,129,131,132,133,144,150,151,158,159,166,168,172,179,180,181,182,183,188,189,191,],[-3,58,-25,-108,-57,-26,-6,-101,-43,-53,-47,-64,58,-5,-87,-27,-63,58,-46,-65,-21,-11,58,-60,58,-44,-12,-10,-52,-28,-95,-48,-88,-61,-29,-54,-62,-9,-24,-22,-45,-4,58,-96,-51,-8,58,-103,58,-7,-23,-78,-66,-70,-99,-76,58,-73,-69,58,-74,-68,-67,-58,58,-79,-75,-71,-77,-72,-102,-55,-30,58,-20,-56,-59,-81,-35,-82,-80,-100,-104,-41,58,-37,58,-36,-15,58,-42,-17,-18,58,-16,]),'COMMA':([14,21,32,42,56,68,76,77,124,125,126,136,156,160,],[-43,-47,-46,-44,-48,-45,-96,117,117,117,117,117,169,-50,]),'OR':([4,9,14,15,21,27,32,42,49,52,56,57,63,67,68,73,76,80,81,102,112,113,114,121,128,129,130,131,132,144,150,151,186,],[-3,-57,-43,-53,-47,-87,-46,-44,-52,-95,-48,-88,-54,110,-45,110,-96,110,110,-58,110,-102,-55,-58,110,110,110,110,-81,-82,-80,-100,110,]),'STRUCTURE':([4,5,7,9,10,11,14,15,21,26,27,28,31,32,34,36,42,44,45,49,50,52,56,57,59,63,65,66,67,68,70,76,81,82,83,84,88,89,102,113,114,115,120,121,129,131,132,133,144,150,151,158,159,163,166,168,172,179,180,182,183,188,189,191,],[-3,18,-25,-57,-26,-6,-43,-53,-47,-5,-87,-27,18,-46,-21,-11,-44,-12,-10,-52,-28,-95,-48,-88,-29,-54,-9,18,-22,-45,-4,-96,-51,-8,18,-103,-7,-23,-58,-102,-55,-30,18,-20,-56,-59,-81,-35,-82,-80,-100,-104,-41,18,18,-37,18,-36,-15,-42,-17,-18,18,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'arraydec':([5,31,66,83,120,163,166,172,189,],[10,10,10,10,10,10,10,10,10,]),'primaryexpression':([5,25,31,39,41,72,83,87,95,98,103,120,166,172,181,189,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'callarguments':([85,146,147,],[123,161,162,]),'dowhilestatement':([5,31,83,120,166,172,189,],[11,11,11,11,11,11,11,]),'iddec':([35,118,154,],[75,137,167,]),'memberaccess':([5,25,31,39,41,72,83,87,95,98,103,120,166,172,181,189,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'comma':([77,124,125,126,136,],[118,145,146,147,154,]),'array':([5,31,66,83,120,163,166,172,189,],[20,20,20,20,20,20,20,20,20,]),'id':([35,37,53,71,85,107,118,139,146,147,154,],[77,78,86,111,126,132,77,156,126,126,77,]),'if':([5,31,83,120,166,172,189,],[23,23,23,23,23,23,23,]),'end':([141,142,171,174,178,190,],[157,159,177,180,183,191,]),'openparam':([5,23,25,31,39,41,61,72,78,83,87,95,98,103,120,166,172,176,181,189,],[25,72,25,25,25,25,87,25,119,25,25,25,25,25,25,25,25,181,25,25,]),'vardec':([5,31,66,83,120,163,166,172,189,],[7,7,7,7,7,7,7,7,7,]),'whilestatement':([5,31,83,120,166,172,189,],[26,26,26,26,26,26,26,]),'biop':([67,73,80,81,112,128,129,130,131,186,],[95,95,95,95,95,95,95,95,95,95,]),'start':([0,],[1,]),'literal':([5,25,31,39,41,72,83,85,87,95,98,103,116,120,145,146,147,152,166,172,181,189,],[27,27,27,27,27,27,27,124,27,27,27,27,136,27,124,124,124,124,27,27,27,27,]),'program':([5,],[29,]),'statement':([5,31,83,120,166,172,189,],[31,31,31,31,31,31,31,]),'literalslist':([85,145,146,147,152,],[125,160,125,125,165,]),'decs':([5,31,66,83,120,163,166,172,189,],[34,34,89,34,34,171,34,34,34,]),'type':([5,20,31,66,83,119,120,163,166,169,172,189,],[35,71,35,35,35,139,35,35,35,139,35,35,]),'structuredec':([5,31,66,83,120,163,166,172,189,],[59,59,59,59,59,59,59,59,59,]),'empty':([5,31,83,119,120,122,166,169,172,189,],[36,36,36,140,36,143,36,140,36,36,]),'function':([5,31,66,83,120,163,166,172,189,],[37,37,37,37,37,37,37,37,37,]),'do':([5,31,83,120,166,172,189,],[38,38,38,38,38,38,38,]),'begin':([50,79,127,153,164,187,],[83,120,148,166,172,189,]),'return':([5,31,83,120,122,166,172,189,],[39,39,39,39,39,39,39,39,]),'unaryop':([5,25,31,39,41,72,83,87,95,98,103,120,166,172,181,189,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'closearray':([130,165,],[150,173,]),'newline':([3,5,31,38,46,62,67,73,75,80,81,83,86,111,112,120,128,129,130,131,135,148,149,155,157,166,172,173,177,184,186,189,],[5,44,44,79,82,88,102,102,115,121,102,44,127,133,102,44,102,102,102,102,153,163,164,168,170,44,44,179,182,187,102,44,]),'equals':([67,73,77,80,81,111,112,128,129,130,131,186,],[103,103,116,103,103,134,103,103,103,103,103,103,]),'simplestatement':([5,31,83,120,166,172,189,],[45,45,45,45,45,45,45,]),'else':([180,],[184,]),'break':([5,31,83,120,166,172,189,],[46,46,46,46,46,46,46,]),'paramlist':([119,169,],[138,175,]),'indexaccess':([5,25,31,39,41,72,83,87,95,98,103,120,166,172,181,189,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'functiondec':([5,31,66,83,120,163,166,172,189,],[50,50,50,50,50,50,50,50,50,]),'functiondefn':([5,31,66,83,120,163,166,172,189,],[28,28,28,28,28,28,28,28,28,]),'structure':([5,31,66,83,120,163,166,172,189,],[53,53,53,53,53,53,53,53,53,]),'of':([67,73,80,81,112,128,129,130,131,186,],[107,107,107,107,107,107,107,107,107,107,]),'idknown':([5,25,31,39,41,72,83,87,95,98,103,120,166,172,181,189,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'closeparam':([73,112,128,138,186,],[114,135,149,155,188,]),'while':([5,31,83,120,166,170,172,189,],[61,61,61,61,61,176,61,61,]),'continue':([5,31,83,120,166,172,189,],[62,62,62,62,62,62,62,]),'functioncall':([5,25,31,39,41,72,83,87,95,98,103,120,166,172,181,189,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'openarray':([67,73,80,81,112,128,129,130,131,134,186,],[98,98,98,98,98,98,98,98,98,152,98,]),'returnstatement':([5,31,83,120,122,166,172,189,],[65,65,65,65,142,65,65,65,]),'dec':([5,31,66,83,120,163,166,172,189,],[66,66,66,66,66,66,66,66,66,]),'expression':([5,25,31,39,41,72,83,87,95,98,103,120,166,172,181,189,],[67,73,67,80,81,112,67,128,129,130,131,67,67,67,186,67,]),'block':([5,31,83,120,166,172,189,],[69,74,122,141,174,178,190,]),'ifstatement':([5,31,83,120,166,172,189,],[70,70,70,70,70,70,70,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> PROBLEM ID newline program','start',4,'p_start','parser.py',11),
  ('program -> block','program',1,'p_program','parser.py',16),
  ('newline -> NEWLINE','newline',1,'p_newline','parser.py',23),
  ('statement -> ifstatement','statement',1,'p_statement','parser.py',31),
  ('statement -> whilestatement','statement',1,'p_statement','parser.py',32),
  ('statement -> dowhilestatement','statement',1,'p_statement','parser.py',33),
  ('statement -> continue newline','statement',2,'p_statement','parser.py',34),
  ('statement -> break newline','statement',2,'p_statement','parser.py',35),
  ('statement -> returnstatement','statement',1,'p_statement','parser.py',36),
  ('statement -> simplestatement','statement',1,'p_statement','parser.py',37),
  ('statement -> empty','statement',1,'p_statement','parser.py',38),
  ('statement -> newline','statement',1,'p_statement','parser.py',39),
  ('block -> statement','block',1,'p_block','parser.py',50),
  ('block -> statement block','block',2,'p_block','parser.py',51),
  ('ifstatement -> if openparam expression closeparam newline begin block end','ifstatement',8,'p_ifstatement','parser.py',60),
  ('ifstatement -> if openparam expression closeparam newline begin block end else newline begin block end','ifstatement',13,'p_ifstatement','parser.py',61),
  ('whilestatement -> while openparam expression closeparam newline begin block end','whilestatement',8,'p_whilestatement','parser.py',71),
  ('dowhilestatement -> do newline begin block end newline while openparam expression closeparam','dowhilestatement',10,'p_dowhilestatement','parser.py',78),
  ('returnstatement -> empty','returnstatement',1,'p_returnstatement','parser.py',84),
  ('returnstatement -> return expression newline','returnstatement',3,'p_returnstatement','parser.py',85),
  ('simplestatement -> decs','simplestatement',1,'p_simplestatement','parser.py',97),
  ('simplestatement -> expression','simplestatement',1,'p_simplestatement','parser.py',98),
  ('decs -> dec decs','decs',2,'p_decs','parser.py',106),
  ('decs -> dec','decs',1,'p_decs','parser.py',107),
  ('dec -> vardec','dec',1,'p_dec','parser.py',117),
  ('dec -> arraydec','dec',1,'p_dec','parser.py',118),
  ('dec -> functiondefn','dec',1,'p_dec','parser.py',119),
  ('dec -> functiondec','dec',1,'p_dec','parser.py',120),
  ('dec -> structuredec','dec',1,'p_dec','parser.py',121),
  ('vardec -> type iddec newline','vardec',3,'p_vardec','parser.py',128),
  ('iddec -> id','iddec',1,'p_iddec','parser.py',143),
  ('iddec -> id comma iddec','iddec',3,'p_iddec','parser.py',144),
  ('iddec -> id equals literal','iddec',3,'p_iddec','parser.py',145),
  ('iddec -> id equals literal comma iddec','iddec',5,'p_iddec','parser.py',146),
  ('arraydec -> array type id newline','arraydec',4,'p_arraydec','parser.py',168),
  ('arraydec -> array type id equals openarray literalslist closearray newline','arraydec',8,'p_arraydec','parser.py',169),
  ('functiondec -> function id openparam paramlist closeparam newline','functiondec',6,'p_functiondec','parser.py',189),
  ('paramlist -> type id','paramlist',2,'p_paramlist','parser.py',200),
  ('paramlist -> type id COMMA paramlist','paramlist',4,'p_paramlist','parser.py',201),
  ('paramlist -> empty','paramlist',1,'p_paramlist','parser.py',202),
  ('functiondefn -> functiondec begin block returnstatement end','functiondefn',5,'p_functiondefn','parser.py',215),
  ('structuredec -> structure id newline begin newline decs end newline','structuredec',8,'p_structuredec','parser.py',230),
  ('literal -> STRINGLITERAL','literal',1,'p_literal','parser.py',237),
  ('literal -> INTEGERLITERAL','literal',1,'p_literal','parser.py',238),
  ('literal -> CHARLITERAL','literal',1,'p_literal','parser.py',239),
  ('literal -> DECIMALLITERAL','literal',1,'p_literal','parser.py',240),
  ('literal -> TRUE','literal',1,'p_literal','parser.py',241),
  ('literal -> FALSE','literal',1,'p_literal','parser.py',242),
  ('literalslist -> literal','literalslist',1,'p_literalslist','parser.py',250),
  ('literalslist -> literal comma literalslist','literalslist',3,'p_literalslist','parser.py',251),
  ('expression -> unaryop expression','expression',2,'p_expression','parser.py',262),
  ('expression -> indexaccess','expression',1,'p_expression','parser.py',263),
  ('expression -> memberaccess','expression',1,'p_expression','parser.py',264),
  ('expression -> functioncall','expression',1,'p_expression','parser.py',265),
  ('expression -> openparam expression closeparam','expression',3,'p_expression','parser.py',266),
  ('expression -> expression biop expression','expression',3,'p_expression','parser.py',267),
  ('expression -> primaryexpression','expression',1,'p_expression','parser.py',268),
  ('expression -> expression newline','expression',2,'p_expression','parser.py',269),
  ('expression -> expression equals expression','expression',3,'p_expression','parser.py',270),
  ('unaryop -> INCREMENT','unaryop',1,'p_unaryop','parser.py',290),
  ('unaryop -> DECREMENT','unaryop',1,'p_unaryop','parser.py',291),
  ('unaryop -> NOT','unaryop',1,'p_unaryop','parser.py',292),
  ('unaryop -> PLUS','unaryop',1,'p_unaryop','parser.py',293),
  ('unaryop -> MINUS','unaryop',1,'p_unaryop','parser.py',294),
  ('unaryop -> PERCENTAGE','unaryop',1,'p_unaryop','parser.py',295),
  ('biop -> MULTIPLY','biop',1,'p_biop','parser.py',308),
  ('biop -> DIVIDE','biop',1,'p_biop','parser.py',309),
  ('biop -> MODULO','biop',1,'p_biop','parser.py',310),
  ('biop -> PLUS','biop',1,'p_biop','parser.py',311),
  ('biop -> MINUS','biop',1,'p_biop','parser.py',312),
  ('biop -> AND','biop',1,'p_biop','parser.py',313),
  ('biop -> OR','biop',1,'p_biop','parser.py',314),
  ('biop -> LT','biop',1,'p_biop','parser.py',315),
  ('biop -> GT','biop',1,'p_biop','parser.py',316),
  ('biop -> LTE','biop',1,'p_biop','parser.py',317),
  ('biop -> GTE','biop',1,'p_biop','parser.py',318),
  ('biop -> EQUALCOMPARISON','biop',1,'p_biop','parser.py',319),
  ('biop -> NOTEQUALS','biop',1,'p_biop','parser.py',320),
  ('equals -> EQUALS','equals',1,'p_equals','parser.py',335),
  ('indexaccess -> expression openarray expression closearray','indexaccess',4,'p_indexaccess','parser.py',340),
  ('memberaccess -> expression of id','memberaccess',3,'p_memberaccess','parser.py',355),
  ('functioncall -> ID OPENPARAM callarguments CLOSEPARAM','functioncall',4,'p_functioncall','parser.py',366),
  ('callarguments -> id','callarguments',1,'p_callarguments','parser.py',377),
  ('callarguments -> literalslist','callarguments',1,'p_callarguments','parser.py',378),
  ('callarguments -> id comma callarguments','callarguments',3,'p_callarguments','parser.py',379),
  ('callarguments -> literalslist comma callarguments','callarguments',3,'p_callarguments','parser.py',380),
  ('primaryexpression -> literal','primaryexpression',1,'p_primaryexpression','parser.py',392),
  ('primaryexpression -> idknown','primaryexpression',1,'p_primaryexpression','parser.py',393),
  ('type -> INTEGER','type',1,'p_type','parser.py',401),
  ('type -> CHAR','type',1,'p_type','parser.py',402),
  ('type -> STRING','type',1,'p_type','parser.py',403),
  ('type -> BOOLEAN','type',1,'p_type','parser.py',404),
  ('type -> DECIMAL','type',1,'p_type','parser.py',405),
  ('type -> VAR','type',1,'p_type','parser.py',406),
  ('idknown -> ID','idknown',1,'p_idknown','parser.py',424),
  ('id -> ID','id',1,'p_id','parser.py',431),
  ('comma -> COMMA','comma',1,'p_comma','parser.py',436),
  ('of -> OF','of',1,'p_of','parser.py',441),
  ('openarray -> OPENARRAY','openarray',1,'p_openarray','parser.py',446),
  ('closearray -> CLOSEARRAY','closearray',1,'p_closearray','parser.py',451),
  ('openparam -> OPENPARAM','openparam',1,'p_openparam','parser.py',456),
  ('closeparam -> CLOSEPARAM','closeparam',1,'p_closeparam','parser.py',461),
  ('begin -> BEGIN','begin',1,'p_begin','parser.py',466),
  ('end -> END','end',1,'p_end','parser.py',471),
  ('structure -> STRUCTURE','structure',1,'p_structure','parser.py',476),
  ('function -> FUNCTION','function',1,'p_function','parser.py',481),
  ('array -> ARRAY','array',1,'p_array','parser.py',486),
  ('return -> RETURN','return',1,'p_return','parser.py',491),
  ('do -> DO','do',1,'p_do','parser.py',496),
  ('while -> WHILE','while',1,'p_while','parser.py',501),
  ('if -> IF','if',1,'p_if','parser.py',506),
  ('else -> ELSE','else',1,'p_else','parser.py',511),
  ('break -> BREAK','break',1,'p_break','parser.py',516),
  ('continue -> CONTINUE','continue',1,'p_continue','parser.py',521),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',526),
]
