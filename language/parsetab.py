
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY BEGIN BOOLEAN BREAK BUSINESS CASH_LEDGER CHAR CHARLITERAL CLOSEARRAY CLOSEBLOCK CLOSEPARAM COMMA CONTINUE CREDIT_LEDGER DECIMAL DECIMALLITERAL DECREMENT DIVIDE DO DOLLAR ELSE END EQUALCOMPARISON EQUALS FALSE FUNCTION GT GTE ID IF IMPORT INCREMENT INTEGER INTEGERLITERAL INVOICE LEDGERS LIABILITY_LEDGER LT LTE MINUS MODULO MULTIPLY NEW NEWLINE NOT NOTEQUALS OF OPENARRAY OPENBLOCK OPENPARAM OR PERCENTAGE PLUS PROBLEM PRODUCT RETURN STRING STRINGLITERAL STRUCTURE TRANSACTION TRUE UINT UTILITY VAR WHILEstart : PROBLEM ID newline imports programimports : IMPORT import newline imports\n\t\t\t\t| IMPORT import newlineimport : UTILITY\n\t\t\t\t| PRODUCT\n\t\t\t\t| INVOICE\n\t\t\t\t| BUSINESS\n\t\t\t\t| LIABILITY_LEDGER\n\t\t\t\t| CREDIT_LEDGER\n\t\t\t\t| CASH_LEDGER\n\t\t\t\t| TRANSACTION\n\t\t\t\t| LEDGERS program : block\n\tnewline : NEWLINE\n\t\n\tstatement : ifstatement \n\t\t\t | whilestatement \n\t\t\t | dowhilestatement\n\t\t\t | continue newline\n\t\t\t | break newline\n\t\t\t | returnstatement\n\t\t\t | simplestatement\n\t\t\t | empty\n\t\t\t | newline\n\t\n\tblock : statement\n\t\t | statement block\n\t\n\tifstatement : if openparam expression closeparam newline begin block end\n\t\t\t   | if openparam expression closeparam newline begin block end else newline begin block end\n\t\n\twhilestatement : while openparam expression closeparam newline begin block end\n\tdowhilestatement : do newline begin block end newline while openparam expression closeparamreturnstatement : empty\n\t\t\t\t\t\t| return expression newline\n\tsimplestatement : decs\n\t\t\t\t\t| expression\n\t\n\tdecs : dec decs\n\t\t| dec\n\t\n\tdec : vardec\n\t\t| arraydec\n\t\t| functiondefn\n\t\t| functiondec\n\t\t| structuredec\n\tvardec : type iddec newline\n\tiddec : id \n\t\t| id comma iddec\n\t\t| id equals literal \n\t\t| id equals literal comma iddec\n\t\n\tarraydec : array type id newline\n\t\t\t| array type id equals openarray literalslist closearray newline\n\t\n\tfunctiondec : function id openparam paramlist closeparam newline\n\t\n\tparamlist : type id\n\t\t\t\t| type id COMMA paramlist\n\t\t\t\t| empty\n\t\n\tfunctiondefn : functiondec begin block returnstatement end\n\tstructuredec : structure id newline begin newline decs end newline\n\tliteral : STRINGLITERAL\n\t\t   | INTEGERLITERAL\n\t\t   | CHARLITERAL\n\t\t   | DECIMALLITERAL\n\t\t   | TRUE\n\t\t   | FALSE\n\t\n\tliteralslist : literal\n\t\t\t\t | literal comma literalslist\n\t\n\texpression : unaryop expression\n\t\t\t  | indexaccess\n\t\t\t  | memberaccess\n\t\t\t  | functioncall\n\t\t\t  | openparam expression closeparam\n\t\t\t  | expression biop expression\n\t\t\t  | primaryexpression\n\t\t\t  | expression newline\n\t\t\t  | expression equals expression\n\t\t\t  | new expression\n\t\n\tunaryop : INCREMENT\n\t\t   | DECREMENT\n\t\t   | NOT\n\t\t   | PLUS\n\t\t   | MINUS\n\t\t   | PERCENTAGE\n\t\n\tbiop : MULTIPLY\n\t\t| DIVIDE\n\t\t| MODULO\n\t\t| PLUS\n\t\t| MINUS\n\t\t| AND\n\t\t| OR\n\t\t| LT\n\t\t| GT\n\t\t| LTE\n\t\t| GTE\n\t\t| EQUALCOMPARISON\n\t\t| NOTEQUALS\n\tequals : EQUALSindexaccess : expression openarray expression closearraymemberaccess : expression of idfunctioncall : ID OPENPARAM callarguments CLOSEPARAM\n\t\t\t\t\t| taxtypes  OPENPARAM callarguments CLOSEPARAM\n\tcallarguments : id\n\t\t\t\t | literalslist\n\t\t\t\t | id comma callarguments\n\t\t\t\t | literalslist comma callarguments\n\t\n\tprimaryexpression : literal\n\t\t\t\t\t | idknown\n\t\n\ttype : INTEGER\n\t\t| CHAR\n\t\t| STRING\n\t\t| BOOLEAN\n\t\t| DECIMAL\n\t\t| VAR\n\t\t| UINT\n\t\t| taxtypes\n\t\n\ttaxtypes : BUSINESS\n\t\t\t | CASH_LEDGER\n\t\t\t | CREDIT_LEDGER\n\t\t\t | INVOICE\n\t\t\t | LIABILITY_LEDGER\n\t\t\t | PRODUCT\n\t\t\t | TRANSACTION\n\t\t\t | UTILITY\n\tidknown : IDid : IDcomma : COMMAof : OFopenarray : OPENARRAYclosearray : CLOSEARRAYopenparam : OPENPARAMcloseparam : CLOSEPARAMbegin : BEGINend : ENDstructure : STRUCTUREfunction : FUNCTIONarray : ARRAYreturn : RETURNdo : DOwhile : WHILEif : IFelse : ELSEbreak : BREAKcontinue : CONTINUEnew : NEWempty : '
    
_lr_action_items = {'DO':([5,6,10,12,13,14,23,25,28,29,32,37,39,40,41,42,48,52,54,57,58,59,60,65,72,73,74,76,77,79,83,98,99,100,113,126,130,131,132,134,139,140,141,142,144,145,147,148,149,163,165,166,167,178,183,185,190,201,202,203,212,213,214,215,219,221,223,],[-14,68,-58,-32,-56,-16,-101,-20,-54,-64,-40,-33,-15,-68,-37,-17,-100,-22,68,-63,-39,-38,-59,-35,-36,-55,-65,-23,-21,-118,-57,-19,-71,-18,-69,-119,-62,68,-126,-34,-3,68,-31,-67,-70,-93,-125,-66,-41,-2,-92,-123,-46,-94,-95,-127,-52,-48,68,68,-47,-28,-26,-53,-29,68,-27,]),'TRANSACTION':([5,6,7,10,11,12,13,14,16,17,19,21,23,25,26,28,29,32,36,37,39,40,41,42,45,46,47,48,50,52,54,55,57,58,59,60,64,65,69,70,72,73,74,76,77,79,83,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,121,126,130,131,132,133,134,135,139,140,141,142,144,145,147,148,149,153,163,165,166,167,178,183,185,190,196,200,201,202,203,211,212,213,214,215,219,221,223,],[-14,8,86,-58,-76,-32,-56,-16,-75,-77,8,8,-101,-20,-131,-54,-64,-40,-74,-33,-15,-68,-37,-17,-138,8,8,-100,-130,-22,8,8,-63,-39,-38,-59,-73,8,-72,-124,-36,-55,-65,-23,-21,-118,-57,-19,-71,-18,-90,-78,-82,-122,-88,8,-85,-81,8,-86,-80,-79,-69,8,-91,-87,-83,-89,-84,-119,-62,8,-126,8,-34,8,-3,8,-31,-67,-70,-93,-125,-66,-41,8,-2,-92,-123,-46,-94,-95,-127,-52,8,8,-48,8,8,8,-47,-28,-26,-53,-29,8,-27,]),'RETURN':([5,6,10,12,13,14,23,25,28,29,32,37,39,40,41,42,48,52,54,57,58,59,60,65,72,73,74,76,77,79,83,98,99,100,113,126,129,130,131,132,134,139,140,141,142,144,145,147,148,149,154,163,165,166,167,178,183,185,190,201,202,203,212,213,214,215,219,221,223,],[-14,26,-58,-32,-56,-16,-101,-20,-54,-64,-40,-33,-15,-68,-37,-17,-100,-22,26,-63,-39,-38,-59,-35,-36,-55,-65,-23,-21,-118,-57,-19,-71,-18,-69,-119,-25,-62,26,-126,-34,-3,26,-31,-67,-70,-93,-125,-66,-41,26,-2,-92,-123,-46,-94,-95,-127,-52,-48,26,26,-47,-28,-26,-53,-29,26,-27,]),'BUSINESS':([5,6,7,10,11,12,13,14,16,17,19,21,23,25,26,28,29,32,36,37,39,40,41,42,45,46,47,48,50,52,54,55,57,58,59,60,64,65,69,70,72,73,74,76,77,79,83,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,121,126,130,131,132,133,134,135,139,140,141,142,144,145,147,148,149,153,163,165,166,167,178,183,185,190,196,200,201,202,203,211,212,213,214,215,219,221,223,],[-14,27,87,-58,-76,-32,-56,-16,-75,-77,27,27,-101,-20,-131,-54,-64,-40,-74,-33,-15,-68,-37,-17,-138,27,27,-100,-130,-22,27,27,-63,-39,-38,-59,-73,27,-72,-124,-36,-55,-65,-23,-21,-118,-57,-19,-71,-18,-90,-78,-82,-122,-88,27,-85,-81,27,-86,-80,-79,-69,27,-91,-87,-83,-89,-84,-119,-62,27,-126,27,-34,27,-3,27,-31,-67,-70,-93,-125,-66,-41,27,-2,-92,-123,-46,-94,-95,-127,-52,27,27,-48,27,27,27,-47,-28,-26,-53,-29,27,-27,]),'NOTEQUALS':([5,10,13,23,28,29,37,40,48,57,60,73,74,79,83,96,99,113,124,126,130,141,142,143,144,145,147,148,155,156,165,166,178,183,216,],[-14,-58,-56,-101,-54,-64,101,-68,-100,-63,-59,-55,-65,-118,-57,101,101,-69,101,-119,101,-69,101,101,101,-93,-125,-66,101,101,-92,-123,-94,-95,101,]),'OPENPARAM':([5,6,8,9,10,11,12,13,14,16,17,19,21,23,25,26,27,28,29,30,32,34,36,37,39,40,41,42,44,45,47,48,49,52,54,55,57,58,59,60,62,64,65,67,69,70,71,72,73,74,76,77,79,81,82,83,84,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,121,126,128,130,131,132,133,134,135,139,140,141,142,144,145,147,148,149,163,165,166,167,178,183,185,190,201,202,203,205,211,212,213,214,215,219,221,223,],[-14,70,-116,-112,-58,-76,-32,-56,-16,-75,-77,70,70,-101,-20,-131,-110,-54,-64,-111,-40,-114,-74,-33,-15,-68,-37,-17,-133,-138,70,-100,-113,-22,70,70,-63,-39,-38,-59,70,-73,-35,-117,-72,-124,70,-36,-55,-65,-23,-21,136,-134,-115,-57,138,138,-19,-71,-18,-90,-78,-82,-122,-88,70,-85,-81,70,-86,-80,-79,-69,70,-91,-87,-83,-89,-84,-119,70,-62,70,-126,70,-34,70,-3,70,-31,-67,-70,-93,-125,-66,-41,-2,-92,-123,-46,-94,-95,-127,-52,-48,70,70,70,70,-47,-28,-26,-53,-29,70,-27,]),'LIABILITY_LEDGER':([5,6,7,10,11,12,13,14,16,17,19,21,23,25,26,28,29,32,36,37,39,40,41,42,45,46,47,48,50,52,54,55,57,58,59,60,64,65,69,70,72,73,74,76,77,79,83,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,121,126,130,131,132,133,134,135,139,140,141,142,144,145,147,148,149,153,163,165,166,167,178,183,185,190,196,200,201,202,203,211,212,213,214,215,219,221,223,],[-14,34,88,-58,-76,-32,-56,-16,-75,-77,34,34,-101,-20,-131,-54,-64,-40,-74,-33,-15,-68,-37,-17,-138,34,34,-100,-130,-22,34,34,-63,-39,-38,-59,-73,34,-72,-124,-36,-55,-65,-23,-21,-118,-57,-19,-71,-18,-90,-78,-82,-122,-88,34,-85,-81,34,-86,-80,-79,-69,34,-91,-87,-83,-89,-84,-119,-62,34,-126,34,-34,34,-3,34,-31,-67,-70,-93,-125,-66,-41,34,-2,-92,-123,-46,-94,-95,-127,-52,34,34,-48,34,34,34,-47,-28,-26,-53,-29,34,-27,]),'STRINGLITERAL':([5,6,10,11,12,13,14,16,17,19,21,23,25,26,28,29,32,36,37,39,40,41,42,45,47,48,52,54,55,57,58,59,60,64,65,69,70,72,73,74,76,77,79,83,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,121,126,130,131,132,133,134,135,136,138,139,140,141,142,144,145,147,148,149,150,151,163,165,166,167,178,179,180,181,183,185,186,190,201,202,203,211,212,213,214,215,219,221,223,],[-14,28,-58,-76,-32,-56,-16,-75,-77,28,28,-101,-20,-131,-54,-64,-40,-74,-33,-15,-68,-37,-17,-138,28,-100,-22,28,28,-63,-39,-38,-59,-73,-35,-72,-124,-36,-55,-65,-23,-21,-118,-57,-19,-71,-18,-90,-78,-82,-122,-88,28,-85,-81,28,-86,-80,-79,-69,28,-91,-87,-83,-89,-84,-119,-62,28,-126,28,-34,28,28,28,-3,28,-31,-67,-70,-93,-125,-66,-41,28,-120,-2,-92,-123,-46,-94,28,28,28,-95,-127,28,-52,-48,28,28,28,-47,-28,-26,-53,-29,28,-27,]),'CREDIT_LEDGER':([5,6,7,10,11,12,13,14,16,17,19,21,23,25,26,28,29,32,36,37,39,40,41,42,45,46,47,48,50,52,54,55,57,58,59,60,64,65,69,70,72,73,74,76,77,79,83,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,121,126,130,131,132,133,134,135,139,140,141,142,144,145,147,148,149,153,163,165,166,167,178,183,185,190,196,200,201,202,203,211,212,213,214,215,219,221,223,],[-14,9,89,-58,-76,-32,-56,-16,-75,-77,9,9,-101,-20,-131,-54,-64,-40,-74,-33,-15,-68,-37,-17,-138,9,9,-100,-130,-22,9,9,-63,-39,-38,-59,-73,9,-72,-124,-36,-55,-65,-23,-21,-118,-57,-19,-71,-18,-90,-78,-82,-122,-88,9,-85,-81,9,-86,-80,-79,-69,9,-91,-87,-83,-89,-84,-119,-62,9,-126,9,-34,9,-3,9,-31,-67,-70,-93,-125,-66,-41,9,-2,-92,-123,-46,-94,-95,-127,-52,9,9,-48,9,9,9,-47,-28,-26,-53,-29,9,-27,]),'WHILE':([5,6,10,12,13,14,23,25,28,29,32,37,39,40,41,42,48,52,54,57,58,59,60,65,72,73,74,76,77,79,83,98,99,100,113,126,130,131,132,134,139,140,141,142,144,145,147,148,149,163,165,166,167,178,183,185,190,197,201,202,203,212,213,214,215,219,221,223,],[-14,44,-58,-32,-56,-16,-101,-20,-54,-64,-40,-33,-15,-68,-37,-17,-100,-22,44,-63,-39,-38,-59,-35,-36,-55,-65,-23,-21,-118,-57,-19,-71,-18,-69,-119,-62,44,-126,-34,-3,44,-31,-67,-70,-93,-125,-66,-41,-2,-92,-123,-46,-94,-95,-127,-52,44,-48,44,44,-47,-28,-26,-53,-29,44,-27,]),'MULTIPLY':([5,10,13,23,28,29,37,40,48,57,60,73,74,79,83,96,99,113,124,126,130,141,142,143,144,145,147,148,155,156,165,166,178,183,216,],[-14,-58,-56,-101,-54,-64,102,-68,-100,-63,-59,-55,-65,-118,-57,102,102,-69,102,-119,102,-69,102,102,102,-93,-125,-66,102,102,-92,-123,-94,-95,102,]),'NEW':([5,6,10,11,12,13,14,16,17,19,21,23,25,26,28,29,32,36,37,39,40,41,42,45,47,48,52,54,55,57,58,59,60,64,65,69,70,72,73,74,76,77,79,83,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,121,126,130,131,132,133,134,135,139,140,141,142,144,145,147,148,149,163,165,166,167,178,183,185,190,201,202,203,211,212,213,214,215,219,221,223,],[-14,45,-58,-76,-32,-56,-16,-75,-77,45,45,-101,-20,-131,-54,-64,-40,-74,-33,-15,-68,-37,-17,-138,45,-100,-22,45,45,-63,-39,-38,-59,-73,-35,-72,-124,-36,-55,-65,-23,-21,-118,-57,-19,-71,-18,-90,-78,-82,-122,-88,45,-85,-81,45,-86,-80,-79,-69,45,-91,-87,-83,-89,-84,-119,-62,45,-126,45,-34,45,-3,45,-31,-67,-70,-93,-125,-66,-41,-2,-92,-123,-46,-94,-95,-127,-52,-48,45,45,45,-47,-28,-26,-53,-29,45,-27,]),'CASH_LEDGER':([5,6,7,10,11,12,13,14,16,17,19,21,23,25,26,28,29,32,36,37,39,40,41,42,45,46,47,48,50,52,54,55,57,58,59,60,64,65,69,70,72,73,74,76,77,79,83,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,121,126,130,131,132,133,134,135,139,140,141,142,144,145,147,148,149,153,163,165,166,167,178,183,185,190,196,200,201,202,203,211,212,213,214,215,219,221,223,],[-14,30,93,-58,-76,-32,-56,-16,-75,-77,30,30,-101,-20,-131,-54,-64,-40,-74,-33,-15,-68,-37,-17,-138,30,30,-100,-130,-22,30,30,-63,-39,-38,-59,-73,30,-72,-124,-36,-55,-65,-23,-21,-118,-57,-19,-71,-18,-90,-78,-82,-122,-88,30,-85,-81,30,-86,-80,-79,-69,30,-91,-87,-83,-89,-84,-119,-62,30,-126,30,-34,30,-3,30,-31,-67,-70,-93,-125,-66,-41,30,-2,-92,-123,-46,-94,-95,-127,-52,30,30,-48,30,30,30,-47,-28,-26,-53,-29,30,-27,]),'MINUS':([5,6,10,11,12,13,14,16,17,19,21,23,25,26,28,29,32,36,37,39,40,41,42,45,47,48,52,54,55,57,58,59,60,64,65,69,70,72,73,74,76,77,79,83,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,121,124,126,130,131,132,133,134,135,139,140,141,142,143,144,145,147,148,149,155,156,163,165,166,167,178,183,185,190,201,202,203,211,212,213,214,215,216,219,221,223,],[-14,11,-58,-76,-32,-56,-16,-75,-77,11,11,-101,-20,-131,-54,-64,-40,-74,103,-15,-68,-37,-17,-138,11,-100,-22,11,11,-63,-39,-38,-59,-73,-35,-72,-124,-36,-55,-65,-23,-21,-118,-57,103,-19,103,-18,-90,-78,-82,-122,-88,11,-85,-81,11,-86,-80,-79,-69,11,-91,-87,-83,-89,-84,103,-119,103,11,-126,11,-34,11,-3,11,-31,103,103,103,-93,-125,-66,-41,103,103,-2,-92,-123,-46,-94,-95,-127,-52,-48,11,11,11,-47,-28,-26,-53,103,-29,11,-27,]),'OPENARRAY':([5,10,13,23,28,29,37,40,48,57,60,73,74,79,83,96,99,113,115,124,126,130,141,142,143,144,145,147,148,155,156,165,166,168,178,183,216,],[-14,-58,-56,-101,-54,-64,104,-68,-100,-63,-59,-55,-65,-118,-57,104,104,-69,-91,104,-119,104,-69,104,104,104,-93,-125,-66,104,104,-92,-123,104,-94,-95,104,]),'STRING':([5,6,10,12,13,14,23,25,28,29,32,37,39,40,41,42,46,48,50,52,54,57,58,59,60,65,70,72,73,74,76,77,79,83,98,99,100,113,126,130,131,132,134,139,140,141,142,144,145,147,148,149,153,163,165,166,167,178,183,185,190,196,200,201,202,203,212,213,214,215,219,221,223,],[-14,75,-58,-32,-56,-16,-101,-20,-54,-64,-40,-33,-15,-68,-37,-17,75,-100,-130,-22,75,-63,-39,-38,-59,75,-124,-36,-55,-65,-23,-21,-118,-57,-19,-71,-18,-69,-119,-62,75,-126,-34,-3,75,-31,-67,-70,-93,-125,-66,-41,75,-2,-92,-123,-46,-94,-95,-127,-52,75,75,-48,75,75,-47,-28,-26,-53,-29,75,-27,]),'BEGIN':([5,58,95,161,191,192,201,220,],[-14,132,132,132,132,132,-48,132,]),'PERCENTAGE':([5,6,10,11,12,13,14,16,17,19,21,23,25,26,28,29,32,36,37,39,40,41,42,45,47,48,52,54,55,57,58,59,60,64,65,69,70,72,73,74,76,77,79,83,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,121,126,130,131,132,133,134,135,139,140,141,142,144,145,147,148,149,163,165,166,167,178,183,185,190,201,202,203,211,212,213,214,215,219,221,223,],[-14,17,-58,-76,-32,-56,-16,-75,-77,17,17,-101,-20,-131,-54,-64,-40,-74,-33,-15,-68,-37,-17,-138,17,-100,-22,17,17,-63,-39,-38,-59,-73,-35,-72,-124,-36,-55,-65,-23,-21,-118,-57,-19,-71,-18,-90,-78,-82,-122,-88,17,-85,-81,17,-86,-80,-79,-69,17,-91,-87,-83,-89,-84,-119,-62,17,-126,17,-34,17,-3,17,-31,-67,-70,-93,-125,-66,-41,-2,-92,-123,-46,-94,-95,-127,-52,-48,17,17,17,-47,-28,-26,-53,-29,17,-27,]),'TRUE':([5,6,10,11,12,13,14,16,17,19,21,23,25,26,28,29,32,36,37,39,40,41,42,45,47,48,52,54,55,57,58,59,60,64,65,69,70,72,73,74,76,77,79,83,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,121,126,130,131,132,133,134,135,136,138,139,140,141,142,144,145,147,148,149,150,151,163,165,166,167,178,179,180,181,183,185,186,190,201,202,203,211,212,213,214,215,219,221,223,],[-14,10,-58,-76,-32,-56,-16,-75,-77,10,10,-101,-20,-131,-54,-64,-40,-74,-33,-15,-68,-37,-17,-138,10,-100,-22,10,10,-63,-39,-38,-59,-73,-35,-72,-124,-36,-55,-65,-23,-21,-118,-57,-19,-71,-18,-90,-78,-82,-122,-88,10,-85,-81,10,-86,-80,-79,-69,10,-91,-87,-83,-89,-84,-119,-62,10,-126,10,-34,10,10,10,-3,10,-31,-67,-70,-93,-125,-66,-41,10,-120,-2,-92,-123,-46,-94,10,10,10,-95,-127,10,-52,-48,10,10,10,-47,-28,-26,-53,-29,10,-27,]),'CHARLITERAL':([5,6,10,11,12,13,14,16,17,19,21,23,25,26,28,29,32,36,37,39,40,41,42,45,47,48,52,54,55,57,58,59,60,64,65,69,70,72,73,74,76,77,79,83,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,121,126,130,131,132,133,134,135,136,138,139,140,141,142,144,145,147,148,149,150,151,163,165,166,167,178,179,180,181,183,185,186,190,201,202,203,211,212,213,214,215,219,221,223,],[-14,13,-58,-76,-32,-56,-16,-75,-77,13,13,-101,-20,-131,-54,-64,-40,-74,-33,-15,-68,-37,-17,-138,13,-100,-22,13,13,-63,-39,-38,-59,-73,-35,-72,-124,-36,-55,-65,-23,-21,-118,-57,-19,-71,-18,-90,-78,-82,-122,-88,13,-85,-81,13,-86,-80,-79,-69,13,-91,-87,-83,-89,-84,-119,-62,13,-126,13,-34,13,13,13,-3,13,-31,-67,-70,-93,-125,-66,-41,13,-120,-2,-92,-123,-46,-94,13,13,13,-95,-127,13,-52,-48,13,13,13,-47,-28,-26,-53,-29,13,-27,]),'NEWLINE':([3,5,6,10,12,13,14,18,20,23,24,25,28,29,32,35,37,39,40,41,42,48,52,54,57,58,59,60,61,65,68,72,73,74,76,77,79,83,85,86,87,88,89,90,91,92,93,94,96,98,99,100,113,124,125,126,127,130,131,132,134,137,139,140,141,142,143,144,145,146,147,148,149,155,156,163,165,166,167,169,170,176,177,178,182,183,184,185,189,190,199,201,202,203,206,210,212,213,214,215,216,217,218,219,221,223,],[5,-14,5,-58,-32,-56,-16,5,5,-101,5,-20,-54,-64,-40,-137,5,-15,-68,-37,-17,-100,-22,5,-63,-39,-38,-59,-136,-35,-132,-36,-55,-65,-23,-21,-118,-57,-5,-11,-7,-8,-9,-12,-6,5,-10,-4,5,-19,5,-18,-69,5,5,-119,-42,5,5,-126,-34,5,-3,5,-31,5,5,5,-93,5,-125,-66,-41,5,5,-2,-92,-123,-46,-44,-43,5,5,-94,5,-95,5,-127,5,-52,-45,-48,5,5,5,5,-47,-28,-26,-53,5,5,-135,-29,5,-27,]),'INTEGERLITERAL':([5,6,10,11,12,13,14,16,17,19,21,23,25,26,28,29,32,36,37,39,40,41,42,45,47,48,52,54,55,57,58,59,60,64,65,69,70,72,73,74,76,77,79,83,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,121,126,130,131,132,133,134,135,136,138,139,140,141,142,144,145,147,148,149,150,151,163,165,166,167,178,179,180,181,183,185,186,190,201,202,203,211,212,213,214,215,219,221,223,],[-14,73,-58,-76,-32,-56,-16,-75,-77,73,73,-101,-20,-131,-54,-64,-40,-74,-33,-15,-68,-37,-17,-138,73,-100,-22,73,73,-63,-39,-38,-59,-73,-35,-72,-124,-36,-55,-65,-23,-21,-118,-57,-19,-71,-18,-90,-78,-82,-122,-88,73,-85,-81,73,-86,-80,-79,-69,73,-91,-87,-83,-89,-84,-119,-62,73,-126,73,-34,73,73,73,-3,73,-31,-67,-70,-93,-125,-66,-41,73,-120,-2,-92,-123,-46,-94,73,73,73,-95,-127,73,-52,-48,73,73,73,-47,-28,-26,-53,-29,73,-27,]),'LT':([5,10,13,23,28,29,37,40,48,57,60,73,74,79,83,96,99,113,124,126,130,141,142,143,144,145,147,148,155,156,165,166,178,183,216,],[-14,-58,-56,-101,-54,-64,107,-68,-100,-63,-59,-55,-65,-118,-57,107,107,-69,107,-119,107,-69,107,107,107,-93,-125,-66,107,107,-92,-123,-94,-95,107,]),'CONTINUE':([5,6,10,12,13,14,23,25,28,29,32,37,39,40,41,42,48,52,54,57,58,59,60,65,72,73,74,76,77,79,83,98,99,100,113,126,130,131,132,134,139,140,141,142,144,145,147,148,149,163,165,166,167,178,183,185,190,201,202,203,212,213,214,215,219,221,223,],[-14,35,-58,-32,-56,-16,-101,-20,-54,-64,-40,-33,-15,-68,-37,-17,-100,-22,35,-63,-39,-38,-59,-35,-36,-55,-65,-23,-21,-118,-57,-19,-71,-18,-69,-119,-62,35,-126,-34,-3,35,-31,-67,-70,-93,-125,-66,-41,-2,-92,-123,-46,-94,-95,-127,-52,-48,35,35,-47,-28,-26,-53,-29,35,-27,]),'PLUS':([5,6,10,11,12,13,14,16,17,19,21,23,25,26,28,29,32,36,37,39,40,41,42,45,47,48,52,54,55,57,58,59,60,64,65,69,70,72,73,74,76,77,79,83,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,121,124,126,130,131,132,133,134,135,139,140,141,142,143,144,145,147,148,149,155,156,163,165,166,167,178,183,185,190,201,202,203,211,212,213,214,215,216,219,221,223,],[-14,16,-58,-76,-32,-56,-16,-75,-77,16,16,-101,-20,-131,-54,-64,-40,-74,108,-15,-68,-37,-17,-138,16,-100,-22,16,16,-63,-39,-38,-59,-73,-35,-72,-124,-36,-55,-65,-23,-21,-118,-57,108,-19,108,-18,-90,-78,-82,-122,-88,16,-85,-81,16,-86,-80,-79,-69,16,-91,-87,-83,-89,-84,108,-119,108,16,-126,16,-34,16,-3,16,-31,108,108,108,-93,-125,-66,-41,108,108,-2,-92,-123,-46,-94,-95,-127,-52,-48,16,16,16,-47,-28,-26,-53,108,-29,16,-27,]),'INVOICE':([5,6,7,10,11,12,13,14,16,17,19,21,23,25,26,28,29,32,36,37,39,40,41,42,45,46,47,48,50,52,54,55,57,58,59,60,64,65,69,70,72,73,74,76,77,79,83,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,121,126,130,131,132,133,134,135,139,140,141,142,144,145,147,148,149,153,163,165,166,167,178,183,185,190,196,200,201,202,203,211,212,213,214,215,219,221,223,],[-14,49,91,-58,-76,-32,-56,-16,-75,-77,49,49,-101,-20,-131,-54,-64,-40,-74,-33,-15,-68,-37,-17,-138,49,49,-100,-130,-22,49,49,-63,-39,-38,-59,-73,49,-72,-124,-36,-55,-65,-23,-21,-118,-57,-19,-71,-18,-90,-78,-82,-122,-88,49,-85,-81,49,-86,-80,-79,-69,49,-91,-87,-83,-89,-84,-119,-62,49,-126,49,-34,49,-3,49,-31,-67,-70,-93,-125,-66,-41,49,-2,-92,-123,-46,-94,-95,-127,-52,49,49,-48,49,49,49,-47,-28,-26,-53,-29,49,-27,]),'IMPORT':([4,5,139,],[7,-14,7,]),'ARRAY':([5,6,10,12,13,14,23,25,28,29,32,37,39,40,41,42,48,52,54,57,58,59,60,65,72,73,74,76,77,79,83,98,99,100,113,126,130,131,132,134,139,140,141,142,144,145,147,148,149,163,165,166,167,178,183,185,190,196,201,202,203,212,213,214,215,219,221,223,],[-14,50,-58,-32,-56,-16,-101,-20,-54,-64,-40,-33,-15,-68,-37,-17,-100,-22,50,-63,-39,-38,-59,50,-36,-55,-65,-23,-21,-118,-57,-19,-71,-18,-69,-119,-62,50,-126,-34,-3,50,-31,-67,-70,-93,-125,-66,-41,-2,-92,-123,-46,-94,-95,-127,-52,50,-48,50,50,-47,-28,-26,-53,-29,50,-27,]),'CLOSEPARAM':([5,10,13,23,28,29,40,48,57,60,70,73,74,79,83,99,113,124,126,130,142,144,145,147,148,153,155,156,157,158,159,160,162,165,166,172,173,178,183,188,193,194,195,200,207,216,],[-14,-58,-56,-101,-54,-64,-68,-100,-63,-59,-124,-55,-65,-118,-57,-71,-69,147,-119,-62,-67,-70,-93,-125,-66,-139,147,147,178,-60,-97,-96,183,-92,-123,-51,147,-94,-95,-49,-61,-99,-98,-139,-50,147,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'arraydec':([6,54,65,131,140,196,202,203,221,],[41,41,41,41,41,41,41,41,41,]),'openarray':([37,96,99,124,130,142,143,144,155,156,168,216,],[109,109,109,109,109,109,109,109,109,109,186,109,]),'primaryexpression':([6,19,21,47,54,55,106,109,114,131,133,135,140,202,203,211,221,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'callarguments':([136,138,180,181,],[157,162,194,195,]),'dowhilestatement':([6,54,131,140,202,203,221,],[42,42,42,42,42,42,42,]),'iddec':([51,152,187,],[125,170,199,]),'memberaccess':([6,19,21,47,54,55,106,109,114,131,133,135,140,202,203,211,221,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'comma':([127,158,159,160,169,],[152,179,180,181,187,]),'array':([6,54,65,131,140,196,202,203,221,],[46,46,46,46,46,46,46,46,46,]),'id':([51,53,80,118,122,136,138,152,171,180,181,187,],[127,128,137,145,146,160,160,127,188,160,160,127,]),'if':([6,54,131,140,202,203,221,],[71,71,71,71,71,71,71,]),'end':([164,174,204,208,209,222,],[184,190,210,213,214,223,]),'openparam':([6,19,21,47,54,55,62,71,106,109,114,128,131,133,135,140,202,203,205,211,221,],[47,47,47,47,47,47,133,135,47,47,47,153,47,47,47,47,47,47,211,47,47,]),'vardec':([6,54,65,131,140,196,202,203,221,],[72,72,72,72,72,72,72,72,72,]),'whilestatement':([6,54,131,140,202,203,221,],[14,14,14,14,14,14,14,]),'biop':([37,96,99,124,130,142,143,144,155,156,216,],[106,106,106,106,106,106,106,106,106,106,106,]),'start':([0,],[1,]),'literal':([6,19,21,47,54,55,106,109,114,131,133,135,136,138,140,150,179,180,181,186,202,203,211,221,],[48,48,48,48,48,48,48,48,48,48,48,48,158,158,48,169,158,158,158,158,48,48,48,48,]),'program':([6,],[15,]),'statement':([6,54,131,140,202,203,221,],[54,54,54,54,54,54,54,]),'imports':([4,139,],[6,163,]),'literalslist':([136,138,179,180,181,186,],[159,159,193,159,159,198,]),'new':([6,19,21,47,54,55,106,109,114,131,133,135,140,202,203,211,221,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'decs':([6,54,65,131,140,196,202,203,221,],[12,12,134,12,12,204,12,12,12,]),'type':([6,46,54,65,131,140,153,196,200,202,203,221,],[51,122,51,51,51,51,171,51,171,51,51,51,]),'structuredec':([6,54,65,131,140,196,202,203,221,],[32,32,32,32,32,32,32,32,32,]),'empty':([6,54,131,140,153,154,200,202,203,221,],[52,52,52,52,172,175,172,52,52,52,]),'function':([6,54,65,131,140,196,202,203,221,],[53,53,53,53,53,53,53,53,53,]),'do':([6,54,131,140,202,203,221,],[18,18,18,18,18,18,18,]),'begin':([58,95,161,191,192,220,],[131,140,182,202,203,221,]),'return':([6,54,131,140,154,202,203,221,],[19,19,19,19,19,19,19,19,]),'unaryop':([6,19,21,47,54,55,106,109,114,131,133,135,140,202,203,211,221,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'closearray':([143,198,],[165,206,]),'newline':([3,6,18,20,24,37,54,92,96,99,124,125,130,131,137,140,142,143,144,146,155,156,176,177,182,184,189,202,203,206,210,216,217,221,],[4,76,95,98,100,113,76,139,141,113,113,149,113,76,161,76,113,113,113,167,113,113,191,192,196,197,201,76,76,212,215,113,220,76,]),'equals':([37,96,99,124,127,130,142,143,144,146,155,156,216,],[114,114,114,114,150,114,114,114,114,168,114,114,114,]),'simplestatement':([6,54,131,140,202,203,221,],[77,77,77,77,77,77,77,]),'else':([214,],[217,]),'break':([6,54,131,140,202,203,221,],[20,20,20,20,20,20,20,]),'paramlist':([153,200,],[173,207,]),'import':([7,],[92,]),'indexaccess':([6,19,21,47,54,55,106,109,114,131,133,135,140,202,203,211,221,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'functiondec':([6,54,65,131,140,196,202,203,221,],[58,58,58,58,58,58,58,58,58,]),'functiondefn':([6,54,65,131,140,196,202,203,221,],[59,59,59,59,59,59,59,59,59,]),'structure':([6,54,65,131,140,196,202,203,221,],[80,80,80,80,80,80,80,80,80,]),'of':([37,96,99,124,130,142,143,144,155,156,216,],[118,118,118,118,118,118,118,118,118,118,118,]),'idknown':([6,19,21,47,54,55,106,109,114,131,133,135,140,202,203,211,221,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'closeparam':([124,155,156,173,216,],[148,176,177,189,219,]),'while':([6,54,131,140,197,202,203,221,],[62,62,62,62,205,62,62,62,]),'continue':([6,54,131,140,202,203,221,],[24,24,24,24,24,24,24,]),'functioncall':([6,19,21,47,54,55,106,109,114,131,133,135,140,202,203,211,221,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'taxtypes':([6,19,21,46,47,54,55,65,106,109,114,131,133,135,140,153,196,200,202,203,211,221,],[84,97,97,123,97,84,97,123,97,97,97,84,97,97,84,123,123,123,84,84,97,84,]),'returnstatement':([6,54,131,140,154,202,203,221,],[25,25,25,25,174,25,25,25,]),'dec':([6,54,65,131,140,196,202,203,221,],[65,65,65,65,65,65,65,65,65,]),'expression':([6,19,21,47,54,55,106,109,114,131,133,135,140,202,203,211,221,],[37,96,99,124,37,130,142,143,144,37,155,156,37,37,37,216,37,]),'block':([6,54,131,140,202,203,221,],[38,129,154,164,208,209,222,]),'ifstatement':([6,54,131,140,202,203,221,],[39,39,39,39,39,39,39,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> PROBLEM ID newline imports program','start',5,'p_start','parser.py',15),
  ('imports -> IMPORT import newline imports','imports',4,'p_imports','parser.py',20),
  ('imports -> IMPORT import newline','imports',3,'p_imports','parser.py',21),
  ('import -> UTILITY','import',1,'p_import','parser.py',29),
  ('import -> PRODUCT','import',1,'p_import','parser.py',30),
  ('import -> INVOICE','import',1,'p_import','parser.py',31),
  ('import -> BUSINESS','import',1,'p_import','parser.py',32),
  ('import -> LIABILITY_LEDGER','import',1,'p_import','parser.py',33),
  ('import -> CREDIT_LEDGER','import',1,'p_import','parser.py',34),
  ('import -> CASH_LEDGER','import',1,'p_import','parser.py',35),
  ('import -> TRANSACTION','import',1,'p_import','parser.py',36),
  ('import -> LEDGERS','import',1,'p_import','parser.py',37),
  ('program -> block','program',1,'p_program','parser.py',47),
  ('newline -> NEWLINE','newline',1,'p_newline','parser.py',54),
  ('statement -> ifstatement','statement',1,'p_statement','parser.py',62),
  ('statement -> whilestatement','statement',1,'p_statement','parser.py',63),
  ('statement -> dowhilestatement','statement',1,'p_statement','parser.py',64),
  ('statement -> continue newline','statement',2,'p_statement','parser.py',65),
  ('statement -> break newline','statement',2,'p_statement','parser.py',66),
  ('statement -> returnstatement','statement',1,'p_statement','parser.py',67),
  ('statement -> simplestatement','statement',1,'p_statement','parser.py',68),
  ('statement -> empty','statement',1,'p_statement','parser.py',69),
  ('statement -> newline','statement',1,'p_statement','parser.py',70),
  ('block -> statement','block',1,'p_block','parser.py',82),
  ('block -> statement block','block',2,'p_block','parser.py',83),
  ('ifstatement -> if openparam expression closeparam newline begin block end','ifstatement',8,'p_ifstatement','parser.py',92),
  ('ifstatement -> if openparam expression closeparam newline begin block end else newline begin block end','ifstatement',13,'p_ifstatement','parser.py',93),
  ('whilestatement -> while openparam expression closeparam newline begin block end','whilestatement',8,'p_whilestatement','parser.py',103),
  ('dowhilestatement -> do newline begin block end newline while openparam expression closeparam','dowhilestatement',10,'p_dowhilestatement','parser.py',110),
  ('returnstatement -> empty','returnstatement',1,'p_returnstatement','parser.py',116),
  ('returnstatement -> return expression newline','returnstatement',3,'p_returnstatement','parser.py',117),
  ('simplestatement -> decs','simplestatement',1,'p_simplestatement','parser.py',129),
  ('simplestatement -> expression','simplestatement',1,'p_simplestatement','parser.py',130),
  ('decs -> dec decs','decs',2,'p_decs','parser.py',138),
  ('decs -> dec','decs',1,'p_decs','parser.py',139),
  ('dec -> vardec','dec',1,'p_dec','parser.py',149),
  ('dec -> arraydec','dec',1,'p_dec','parser.py',150),
  ('dec -> functiondefn','dec',1,'p_dec','parser.py',151),
  ('dec -> functiondec','dec',1,'p_dec','parser.py',152),
  ('dec -> structuredec','dec',1,'p_dec','parser.py',153),
  ('vardec -> type iddec newline','vardec',3,'p_vardec','parser.py',160),
  ('iddec -> id','iddec',1,'p_iddec','parser.py',175),
  ('iddec -> id comma iddec','iddec',3,'p_iddec','parser.py',176),
  ('iddec -> id equals literal','iddec',3,'p_iddec','parser.py',177),
  ('iddec -> id equals literal comma iddec','iddec',5,'p_iddec','parser.py',178),
  ('arraydec -> array type id newline','arraydec',4,'p_arraydec','parser.py',200),
  ('arraydec -> array type id equals openarray literalslist closearray newline','arraydec',8,'p_arraydec','parser.py',201),
  ('functiondec -> function id openparam paramlist closeparam newline','functiondec',6,'p_functiondec','parser.py',221),
  ('paramlist -> type id','paramlist',2,'p_paramlist','parser.py',232),
  ('paramlist -> type id COMMA paramlist','paramlist',4,'p_paramlist','parser.py',233),
  ('paramlist -> empty','paramlist',1,'p_paramlist','parser.py',234),
  ('functiondefn -> functiondec begin block returnstatement end','functiondefn',5,'p_functiondefn','parser.py',247),
  ('structuredec -> structure id newline begin newline decs end newline','structuredec',8,'p_structuredec','parser.py',262),
  ('literal -> STRINGLITERAL','literal',1,'p_literal','parser.py',269),
  ('literal -> INTEGERLITERAL','literal',1,'p_literal','parser.py',270),
  ('literal -> CHARLITERAL','literal',1,'p_literal','parser.py',271),
  ('literal -> DECIMALLITERAL','literal',1,'p_literal','parser.py',272),
  ('literal -> TRUE','literal',1,'p_literal','parser.py',273),
  ('literal -> FALSE','literal',1,'p_literal','parser.py',274),
  ('literalslist -> literal','literalslist',1,'p_literalslist','parser.py',282),
  ('literalslist -> literal comma literalslist','literalslist',3,'p_literalslist','parser.py',283),
  ('expression -> unaryop expression','expression',2,'p_expression','parser.py',294),
  ('expression -> indexaccess','expression',1,'p_expression','parser.py',295),
  ('expression -> memberaccess','expression',1,'p_expression','parser.py',296),
  ('expression -> functioncall','expression',1,'p_expression','parser.py',297),
  ('expression -> openparam expression closeparam','expression',3,'p_expression','parser.py',298),
  ('expression -> expression biop expression','expression',3,'p_expression','parser.py',299),
  ('expression -> primaryexpression','expression',1,'p_expression','parser.py',300),
  ('expression -> expression newline','expression',2,'p_expression','parser.py',301),
  ('expression -> expression equals expression','expression',3,'p_expression','parser.py',302),
  ('expression -> new expression','expression',2,'p_expression','parser.py',303),
  ('unaryop -> INCREMENT','unaryop',1,'p_unaryop','parser.py',315),
  ('unaryop -> DECREMENT','unaryop',1,'p_unaryop','parser.py',316),
  ('unaryop -> NOT','unaryop',1,'p_unaryop','parser.py',317),
  ('unaryop -> PLUS','unaryop',1,'p_unaryop','parser.py',318),
  ('unaryop -> MINUS','unaryop',1,'p_unaryop','parser.py',319),
  ('unaryop -> PERCENTAGE','unaryop',1,'p_unaryop','parser.py',320),
  ('biop -> MULTIPLY','biop',1,'p_biop','parser.py',333),
  ('biop -> DIVIDE','biop',1,'p_biop','parser.py',334),
  ('biop -> MODULO','biop',1,'p_biop','parser.py',335),
  ('biop -> PLUS','biop',1,'p_biop','parser.py',336),
  ('biop -> MINUS','biop',1,'p_biop','parser.py',337),
  ('biop -> AND','biop',1,'p_biop','parser.py',338),
  ('biop -> OR','biop',1,'p_biop','parser.py',339),
  ('biop -> LT','biop',1,'p_biop','parser.py',340),
  ('biop -> GT','biop',1,'p_biop','parser.py',341),
  ('biop -> LTE','biop',1,'p_biop','parser.py',342),
  ('biop -> GTE','biop',1,'p_biop','parser.py',343),
  ('biop -> EQUALCOMPARISON','biop',1,'p_biop','parser.py',344),
  ('biop -> NOTEQUALS','biop',1,'p_biop','parser.py',345),
  ('equals -> EQUALS','equals',1,'p_equals','parser.py',360),
  ('indexaccess -> expression openarray expression closearray','indexaccess',4,'p_indexaccess','parser.py',365),
  ('memberaccess -> expression of id','memberaccess',3,'p_memberaccess','parser.py',370),
  ('functioncall -> ID OPENPARAM callarguments CLOSEPARAM','functioncall',4,'p_functioncall','parser.py',376),
  ('functioncall -> taxtypes OPENPARAM callarguments CLOSEPARAM','functioncall',4,'p_functioncall','parser.py',377),
  ('callarguments -> id','callarguments',1,'p_callarguments','parser.py',384),
  ('callarguments -> literalslist','callarguments',1,'p_callarguments','parser.py',385),
  ('callarguments -> id comma callarguments','callarguments',3,'p_callarguments','parser.py',386),
  ('callarguments -> literalslist comma callarguments','callarguments',3,'p_callarguments','parser.py',387),
  ('primaryexpression -> literal','primaryexpression',1,'p_primaryexpression','parser.py',400),
  ('primaryexpression -> idknown','primaryexpression',1,'p_primaryexpression','parser.py',401),
  ('type -> INTEGER','type',1,'p_type','parser.py',409),
  ('type -> CHAR','type',1,'p_type','parser.py',410),
  ('type -> STRING','type',1,'p_type','parser.py',411),
  ('type -> BOOLEAN','type',1,'p_type','parser.py',412),
  ('type -> DECIMAL','type',1,'p_type','parser.py',413),
  ('type -> VAR','type',1,'p_type','parser.py',414),
  ('type -> UINT','type',1,'p_type','parser.py',415),
  ('type -> taxtypes','type',1,'p_type','parser.py',416),
  ('taxtypes -> BUSINESS','taxtypes',1,'p_taxtypes','parser.py',439),
  ('taxtypes -> CASH_LEDGER','taxtypes',1,'p_taxtypes','parser.py',440),
  ('taxtypes -> CREDIT_LEDGER','taxtypes',1,'p_taxtypes','parser.py',441),
  ('taxtypes -> INVOICE','taxtypes',1,'p_taxtypes','parser.py',442),
  ('taxtypes -> LIABILITY_LEDGER','taxtypes',1,'p_taxtypes','parser.py',443),
  ('taxtypes -> PRODUCT','taxtypes',1,'p_taxtypes','parser.py',444),
  ('taxtypes -> TRANSACTION','taxtypes',1,'p_taxtypes','parser.py',445),
  ('taxtypes -> UTILITY','taxtypes',1,'p_taxtypes','parser.py',446),
  ('idknown -> ID','idknown',1,'p_idknown','parser.py',493),
  ('id -> ID','id',1,'p_id','parser.py',498),
  ('comma -> COMMA','comma',1,'p_comma','parser.py',503),
  ('of -> OF','of',1,'p_of','parser.py',508),
  ('openarray -> OPENARRAY','openarray',1,'p_openarray','parser.py',513),
  ('closearray -> CLOSEARRAY','closearray',1,'p_closearray','parser.py',518),
  ('openparam -> OPENPARAM','openparam',1,'p_openparam','parser.py',523),
  ('closeparam -> CLOSEPARAM','closeparam',1,'p_closeparam','parser.py',528),
  ('begin -> BEGIN','begin',1,'p_begin','parser.py',533),
  ('end -> END','end',1,'p_end','parser.py',538),
  ('structure -> STRUCTURE','structure',1,'p_structure','parser.py',543),
  ('function -> FUNCTION','function',1,'p_function','parser.py',548),
  ('array -> ARRAY','array',1,'p_array','parser.py',553),
  ('return -> RETURN','return',1,'p_return','parser.py',558),
  ('do -> DO','do',1,'p_do','parser.py',563),
  ('while -> WHILE','while',1,'p_while','parser.py',568),
  ('if -> IF','if',1,'p_if','parser.py',573),
  ('else -> ELSE','else',1,'p_else','parser.py',578),
  ('break -> BREAK','break',1,'p_break','parser.py',583),
  ('continue -> CONTINUE','continue',1,'p_continue','parser.py',588),
  ('new -> NEW','new',1,'p_new','parser.py',593),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',598),
]
